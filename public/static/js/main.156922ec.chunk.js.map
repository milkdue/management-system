{"version":3,"sources":["redux/actions/create_or_delete_user_info_action.js","redux/action_types.js","redux/reducers/create_or_delete_user_info_reducer.js","redux/reducers/index.js","redux/reducers/create_save_title_reducer.js","redux/reducers/create_save_product_list_reducer.js","redux/store.js","api/myAxios.js","config/index.js","api/index.js","containers/login/login.jsx","myFunction/time_format.js","myFunction/accord_weather_to_img.js","containers/bar/bar.jsx","config/menu-config.js","containers/admin/header/header.jsx","components/home/home.jsx","config/color.js","containers/category/category.jsx","containers/product/product.jsx","redux/actions/create_save_product_list_action.js","containers/user/user.jsx","containers/role/role.jsx","containers/line/line.jsx","containers/pie/pie.jsx","containers/admin/left_nav/left_nav.jsx","redux/actions/create_save_title_action.js","containers/product/product_detail/product_detail.jsx","containers/product/product_add_update/pictures_wall/pictures_wall.jsx","containers/product/product_add_update/text_editor/text_editor.jsx","containers/product/product_add_update/produc_add_update.jsx","containers/admin/admin.jsx","App.js","index.js","static/imgs/logo.png"],"names":["deleteUserInfoAction","localStorage","removeItem","type","data","user","JSON","parse","getItem","token","initState","isLogin","combineReducers","userInfo","previousState","action","title","productList","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","myAxios","axios","create","timeout","interceptors","request","use","config","NProgress","start","store","getState","headers","Authorization","qs","stringify","error","Promise","reject","response","done","status","message","warning","dispatch","BASE_URL","reqLogin","username","password","post","reqCategoryList","get","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqProductList","pageNum","pageSize","params","reqUpdateProductState","productId","reqSearchProductList","searchType","keyWord","reqProductDetail","reqProductCategory","reqRemovePhoto","name","reqAddProduct","obj","reqUpdateProduct","reqAddRole","roleName","reqRoleList","reqAuthRole","auth_time","Date","now","reqUserList","reqAddUser","reqUpdateUser","reqDeleteUser","userId","Login","connect","state","createUserInfo","value","setItem","onFinish","userInformation","a","result","msg","props","history","push","onFinishFailed","values","errorFields","outOfDate","forEach","element","errors","pwdValidator","rule","callback","length","test","this","to","className","src","logo","alt","initialValues","remember","Item","rules","required","min","max","pattern","style","color","prefix","UserOutlined","placeholder","validator","LockOutlined","htmlType","Component","dateFormat","fmt","date","ret","opt","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","k","RegExp","exec","replace","padStart","urls","imgUrl","menuList","key","icon","HomeOutlined","path","isPublic","AccountBookOutlined","children","BarsOutlined","ShoppingOutlined","ContactsOutlined","AreaChartOutlined","BarChartOutlined","LineChartOutlined","PieChartOutlined","confirm","Modal","Header","deleteUserInfo","withRouter","isFullScreen","time","local","weatherUrl","weatherType","temperature","timerId","getTitle","location","pathname","split","indexOf","item","temp","find","setState","changeFullState","loginOut","ExclamationCircleOutlined","content","okText","okType","cancelText","onOk","onCancel","loading","inOrOutFullScreen","screenfull","toggle","resolve","jsonp","err","city","then","place","reqWeather","forecast","low","high","temperatureReg","parseInt","catch","reason","console","log","on","setInterval","off","clearInterval","size","onClick","FullscreenExitOutlined","FullscreenOutlined","Home","autoplay","colorType","colorCount","adjective","adjectiveCount","Category","visible","category","isLoading","modalId","modalName","getCategoryList","map","showTag","reverse","Math","floor","random","tags","adjective1","adjective2","showAdd","showUpdate","_id","addCategory","newcategory","unshift","formRef","resetFields","updataCategory","categoryname","handleOk","validateFields","handleCancel","setFieldsValue","columns","align","dataIndex","width","render","tag","toUpperCase","ghost","ref","form","initialValue","extra","PlusCircleOutlined","dataSource","bordered","rowKey","pagination","showQuickJumper","Option","Select","Product","saveProductList","total","current","updateProductState","success","getProductList","page","isSearch","list","handleChange","getKeyWord","event","target","searchKeyWord","price","danger","defaultValue","onChange","marginLeft","allowClear","SearchOutlined","PlusOutlined","User","addVisible","roles","users","getUserList","showAddModal","role_id","phone","email","handleAddOk","flag","handleAddCancel","id","dayjs","format","labelCol","xs","md","lg","label","UserAddOutlined","Role","roleVisible","roleList","authList","checkedKeys","menus","getRoleList","showAddRole","showAuth","newCheckedKeys","addRole","newRoleList","handleRoleOk","auth_name","handleRoleCancel","onCheck","newMenuList","PlusSquareOutlined","checkable","defaultExpandAll","treeData","xAxisData","data1","data2","i","Bar","getOption","text","legend","toolbox","feature","magicType","dataView","saveAsImage","pixelRatio","tooltip","xAxis","splitLine","show","yAxis","series","animationDelay","idx","animationEasing","animationDelayUpdate","option","height","Line","smooth","Pie","trigger","formatter","orient","left","selectedMode","radius","position","labelLine","selected","backgroundColor","borderColor","borderWidth","borderRadius","rich","lineHeight","hr","b","fontSize","per","padding","SubMenu","Menu","LeftNav","role","saveTitle","createMenuList","hasAuth","some","item2","selectedKeys","slice","mode","theme","defaultOpenKeys","ProductDetail","productDetail","getProductDetail","getProductCategory","match","desc","detail","imgs","goBack","LeftSquareOutlined","justifyContent","LoadingOutlined","index","dangerouslySetInnerHTML","__html","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","previewImage","previewTitle","fileList","setFileList","uid","url","handlePreview","preview","originFileObj","substring","lastIndexOf","getPhotoList","photoArr","uploadButton","marginTop","method","listType","onPreview","footer","React","TextEditor","editorState","EditorState","createEmpty","onEditorStateChange","setText","html","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","getText","draftToHtml","convertToRaw","getCurrentContent","editorStyle","border","paddingLeft","minHeight","ProductAddUpdate","categoryList","getProductInfo","mapProductInfoToState","photoRef","createRef","textRef","xl","sm","wrapperCol","addonAfter","Footer","Layout","Sider","Content","Admin","component","App","ReactDOM","document","getElementById","module","exports"],"mappings":"4YASaA,EAAuB,WAGhC,OAFAC,aAAaC,WAAW,QACxBD,aAAaC,WAAW,SACjB,CAACC,KCVoB,mBDUIC,KAAM,K,oHEVtCC,EAAOC,KAAKC,MAAMN,aAAaO,QAAQ,SACvCC,EAAQR,aAAaO,QAAQ,SAC7BE,EAAY,CACZL,KAAMA,GAAQ,GACdM,WAASN,IAAQI,GACjBA,MAAOA,GAAS,ICDLG,4BAAgB,CAC3BC,SDEW,WAA4C,IAAnCC,EAAkC,uDAAlBJ,EAAWK,EAAO,uCACjDZ,EAAcY,EAAdZ,KAAMC,EAAQW,EAARX,KAEX,OAAQD,GACJ,IDZwB,mBCkBpB,MALW,CACPE,KAAMD,EAAKC,KACXI,MAAOL,EAAKK,MACZE,SAAS,GAGjB,IDlBwB,mBCwBpB,MALW,CACPN,KAAM,KACNI,MAAO,GACPE,SAAS,GAGjB,QACI,OAAOG,ICpBfE,MCPW,WAAqC,IAA5BF,EAA2B,uDAAX,GAAIC,EAAO,uCAC1CZ,EAAcY,EAAdZ,KAAMC,EAAQW,EAARX,KAEX,OAAQD,GACJ,IHFkB,aGId,OADWC,EAEf,QACI,OAAOU,IDAfG,YERW,WAAuC,IAA9BH,EAA6B,uDAAb,KAAMC,EAAO,uCAC5CZ,EAAcY,EAAdZ,KAAMC,EAAQW,EAARX,KAEX,OAAQD,GACJ,IJDyB,oBIGrB,OADWC,EAEf,QACI,OAAOU,MCJJI,wBAAYC,EAAUC,8BAAoBC,0BAAgBC,OCInEC,G,OAAUC,IAAMC,OAAO,CAEzBC,QAAS,OAKbH,EAAQI,aAAaC,QAAQC,KAAI,SAAUC,GAoBvC,OAlBAC,IAAUC,QAIPC,EAAMC,WAAWrB,SAASJ,QACzBqB,EAAOK,QAAQC,cAAgB,WAAaH,EAAMC,WAAWrB,SAASJ,OAY1EqB,EAAO1B,KAAOiC,IAAGC,UAAUR,EAAO1B,MAC3B0B,KACR,SAAUS,GAET,OAAOC,QAAQC,OAAOF,MAI1BhB,EAAQI,aAAae,SAASb,KAAI,SAAUa,GAgBxC,OAbAX,IAAUY,OAaHD,EAAStC,QACjB,SAAUmC,GAcT,OAZAR,IAAUY,OACmB,MAA1BJ,EAAMG,SAASE,QACdC,IAAQC,QAAQ,iFAAiB,GAEjCb,EAAMc,SAAS/C,MAGf6C,IAAQN,MAAMA,EAAMM,SAKjB,IAAIL,SAAQ,kBAIRjB,I,EAAAA,IC1EFyB,EAAW,wBCEXC,EAAW,SAACC,EAAUC,GAAX,OAAwB5B,EAAQ6B,KAAR,UAAgBJ,EAAhB,UAAkC,CAACE,WAAUC,cAgBhFE,EAAkB,kBAAM9B,EAAQ+B,IAAR,UAAeN,EAAf,2BAExBO,EAAiB,SAACC,GAAD,OAAkBjC,EAAQ6B,KAAR,UAAgBJ,EAAhB,wBAAgD,CAACQ,kBAEpFC,EAAoB,SAACC,EAAYF,GAAb,OAA8BjC,EAAQ6B,KAAR,UAAgBJ,EAAhB,2BAAmD,CAACU,aAAYF,kBAElHG,EAAiB,SAACC,EAASC,GAAV,OAAuBtC,EAAQ+B,IAAR,UAAeN,EAAf,wBAA+C,CAACc,OAAO,CAACF,UAASC,eAEzGE,EAAwB,SAACC,EAAWpB,GAAZ,OAAuBrB,EAAQ6B,KAAR,UAAgBJ,EAAhB,gCAAwD,CAACgB,YAAWpB,YAEnHqB,EAAuB,SAACL,EAAQC,EAASK,EAAWC,GAA7B,OAAyC5C,EAAQ+B,IAAR,UAAeN,EAAf,0BAAiD,CAACc,OAAO,aAACF,UAASC,YAAWK,EAAYC,MAE1JC,EAAmB,SAACJ,GAAD,OAAezC,EAAQ+B,IAAR,UAAeN,EAAf,wBAA+C,CAACc,OAAO,CAACE,gBAE1FK,GAAqB,SAACX,GAAD,OAAgBnC,EAAQ+B,IAAR,UAAeN,EAAf,yBAAgD,CAACc,OAAO,CAACJ,iBAE9FY,GAAiB,SAACC,GAAD,OAAUhD,EAAQ6B,KAAR,UAAgBJ,EAAhB,sBAA8C,CAACuB,UAE1EC,GAAgB,SAACC,GAAD,OAASlD,EAAQ6B,KAAR,UAAgBJ,EAAhB,sCAAmDyB,KAE5EC,GAAmB,SAACD,GAAD,OAASlD,EAAQ6B,KAAR,UAAgBJ,EAAhB,yCAAsDyB,KAElFE,GAAa,SAACC,GAAD,OAAcrD,EAAQ6B,KAAR,UAAgBJ,EAAhB,oBAA4C,CAAC4B,cAExEC,GAAc,kBAAMtD,EAAQ+B,IAAR,UAAeN,EAAf,uBAEpB8B,GAAc,SAACL,GAAD,OAASlD,EAAQ6B,KAAR,UAAgBJ,EAAhB,kDAAmDyB,GAAnD,IAAwDM,UAAWC,KAAKC,UAE/FC,GAAc,kBAAM3D,EAAQ+B,IAAR,UAAeN,EAAf,uBAEpBmC,GAAa,SAACV,GAAD,OAASlD,EAAQ6B,KAAR,UAAgBJ,EAAhB,mCAAgDyB,KAEtEW,GAAgB,SAACX,GAAD,OAASlD,EAAQ6B,KAAR,UAAgBJ,EAAhB,sCAAmDyB,KAE5EY,GAAgB,SAACC,GAAD,OAAY/D,EAAQ6B,KAAR,UAAgBJ,EAAhB,uBAA+C,CAACsC,Y,qBCyG1EC,I,OArJdC,aACG,SAAAC,GAAK,MAAK,CAAC5E,SAAU4E,EAAM5E,YAC3B,CACI6E,eVb4B,SAAAC,GAIhC,OAFA1F,aAAa2F,QAAQ,OAAQtF,KAAKgC,UAAUqD,EAAMtF,OAClDJ,aAAa2F,QAAQ,QAASD,EAAMlF,OAC7B,CAACN,KCLoB,mBDKIC,KAAMuF,K,+MUatCE,S,uCAAW,WAAOC,GAAP,mBAAAC,EAAA,6DAIA7C,EAAsB4C,EAAtB5C,SAAUC,EAAY2C,EAAZ3C,SAJV,SAKYF,EAASC,EAAUC,GAL/B,OAiBc,KAZjB6C,EALG,QAiBGpD,OACNC,IAAQC,QAAQkD,EAAOC,IAAK,IAG5B,EAAKC,MAAMR,eAAeM,EAAO5F,MAEjC,EAAK8F,MAAMC,QAAQC,KAAK,WAvBrB,2C,wDA4BXC,eAAiB,YAAwC,EAArCC,OAAsC,IAA9BC,EAA6B,EAA7BA,YAA6B,EAAhBC,UAErCD,EAAYE,SAAQ,SAAAC,GAChB7D,IAAQC,QAAQ4D,EAAQC,OAAQ,O,EAIxCC,aAAe,SAACC,EAAMlB,EAAOmB,GASrBnB,EAEKA,EAAMoB,OAAS,EACpBD,EAAS,4DACJnB,EAAMoB,OAAS,GACpBD,EAAS,6DACF,QAASE,KAAKrB,IACrBmB,EAAS,yFANTA,EAAS,yCAQbA,K,uDAKA,OADkBG,KAAKf,MAAMrF,SAAtBF,QAEI,kBAAC,IAAD,CAAUuG,GAAG,WAGhB,yBAAKC,UAAU,SACX,gCACI,yBAAKC,IAAKC,KAAMC,IAAI,SACpB,qEAEJ,iCACI,wDACA,kBAAC,IAAD,CACI/C,KAAK,eACL4C,UAAU,aAEVI,cAAe,CAAEC,UAAU,GAE3B3B,SAAUoB,KAAKpB,SACfQ,eAAgBY,KAAKZ,gBAEzB,kBAAC,IAAKoB,KAAN,CACIlD,KAAK,WAQLmD,MAAO,CACH,CACIC,UAAU,EACV9E,QAAS,+CAEb,CACI+E,IAAK,EACL/E,QAAS,kEAEb,CACIgF,IAAK,GACLhF,QAAS,mEAEb,CACIiF,QAAS,QACTjF,QAAS,iGAIjB,kBAAC,IAAD,CACIkF,MAAO,CAACC,MAAO,sBACfC,OAAQ,kBAACC,EAAA,EAAD,CAAcf,UAAU,wBAA0BgB,YAAY,cAG9E,kBAAC,IAAKV,KAAN,CACIlD,KAAK,WACLmD,MAAO,CACH,CAEIU,UAAWnB,KAAKL,gBAIxB,kBAAC,IAAD,CACImB,MAAO,CAACC,MAAO,sBACfC,OAAQ,kBAACI,EAAA,EAAD,CAAclB,UAAU,wBAChChH,KAAK,WACLgI,YAAY,cAIpB,kBAAC,IAAKV,KAAN,KACI,kBAAC,IAAD,CAAQtH,KAAK,UAAUmI,SAAS,SAASnB,UAAU,qBAAnD,wB,GAlIRoB,e,+EClBb,SAASC,GAAWC,EAAKC,GAC5B,IAAIC,EACEC,EAAM,CACR,KAAMF,EAAKG,cAAcC,WACzB,MAAOJ,EAAKK,WAAa,GAAGD,WAC5B,KAAMJ,EAAKM,UAAUF,WACrB,KAAMJ,EAAKO,WAAWH,WACtB,KAAMJ,EAAKQ,aAAaJ,WACxB,KAAMJ,EAAKS,aAAaL,YAE5B,IAAK,IAAIM,KAAKR,GACVD,EAAM,IAAIU,OAAO,IAAMD,EAAI,KAAKE,KAAKb,MAGjCA,EAAMA,EAAIc,QAAQZ,EAAI,GAAuB,IAAlBA,EAAI,GAAG5B,OAAiB6B,EAAIQ,GAAOR,EAAIQ,GAAGI,SAASb,EAAI,GAAG5B,OAAQ,OAGrG,OAAO0B,EChBX,IAAIgB,GAAO,CACP,yDACA,uDACA,yDACA,0DACA,uDACA,sDACA,4DACA,yDACA,0DACA,2DACA,wDACA,wDACA,0DACA,sDACA,sDAIG,SAASC,GAAOvJ,GACnB,OAAQA,GACJ,IAAK,eACD,OAAOsJ,GAAK,GAChB,IAAK,SACD,OAAOA,GAAK,GAChB,IAAK,eACD,OAAOA,GAAK,GAChB,IAAK,eACD,OAAOA,GAAK,GAChB,IAAK,eACD,OAAOA,GAAK,GAChB,IAAK,SACD,OAAOA,GAAK,GAChB,IAAK,qBACD,OAAOA,GAAK,GAChB,IAAK,eACD,OAAOA,GAAK,GAChB,IAAK,eACD,OAAOA,GAAK,GAChB,IAAK,eACD,OAAOA,GAAK,GAChB,IAAK,eACD,OAAOA,GAAK,IAChB,IAAK,eACD,OAAOA,GAAK,IAChB,IAAK,qBACD,OAAOA,GAAK,IAChB,IAAK,SACD,OAAOA,GAAK,IAChB,IAAK,SACD,OAAOA,GAAK,IAChB,QACI,OAAOA,GAAK,IC7CxB,I,gHC4EeE,GApEE,CACf,CACE3I,MAAO,eACP4I,IAAK,OACLC,KAAMC,KACNC,KAAM,cACNC,UAAU,GAEZ,CACEhJ,MAAO,eACP4I,IAAK,aACLC,KAAMI,KACNC,SAAU,CACR,CACElJ,MAAO,2BACP4I,IAAK,WACLG,KAAM,6BACNF,KAAMM,MAER,CACEnJ,MAAO,2BACP4I,IAAK,UACLG,KAAM,4BACNF,KAAMO,QAKZ,CACEpJ,MAAO,2BACP4I,IAAK,OACLC,KAAM3B,IACN6B,KAAM,eAER,CACE/I,MAAO,2BACP4I,IAAK,OACLC,KAAMQ,KACNN,KAAM,eAGR,CACE/I,MAAO,2BACP4I,IAAK,SACLC,KAAMS,KACNJ,SAAU,CACR,CACElJ,MAAO,qBACP4I,IAAK,MACLC,KAAMU,KACNR,KAAM,qBAER,CACE/I,MAAO,qBACP4I,IAAK,OACLC,KAAMW,KACNT,KAAM,sBAER,CACE/I,MAAO,qBACP4I,IAAK,MACLC,KAAMY,KACNV,KAAM,wBCjENW,I,OAAYC,KAAZD,SA0IOE,GAxIdpF,aACG,SAAAC,GAAK,MAAK,CACN5E,SAAU4E,EAAM5E,SAChBG,MAAOyE,EAAMzE,SAEjB,CACI6J,eAAgB7K,G,IAGvB8K,Y,+MAEGrF,MAAQ,CACJsF,cAAc,EACdC,KAAMxC,GAAW,sBAAuB,IAAIxD,MAC5CiG,MAAO,GACPC,WAAY,GACZC,YAAa,GACbC,YAAa,GACbpK,MAAO,I,EAGXqK,QAAU,E,EAyCVC,SAAW,WACP,IAAI1B,EAAM,EAAK1D,MAAMqF,SAASC,SAASC,MAAM,KACX7B,GAAH,IAA5BA,EAAI8B,QAAQ,WAAyB,UAC7B9B,EAAIA,EAAI7C,OAAS,GAC5B4C,GAASlD,SAAQ,SAACkF,GACd,GAAIA,EAAKzB,SAEJ,CACD,IAAI0B,EAAOD,EAAKzB,SAAS2B,MAAK,SAAC3B,GAC3B,OAAOA,EAASN,MAAQA,KAGzBgC,GAAM,EAAKE,SAAS,CAAC9K,MAAO4K,EAAK5K,aANjC2K,EAAK/B,MAAQA,GAAK,EAAKkC,SAAS,CAAC9K,MAAO2K,EAAK3K,Y,EAY5D+K,gBAAkB,WACd,IAAIhB,GAAgB,EAAKtF,MAAMsF,aAC/B,EAAKe,SAAS,CAACf,kB,EAGnBiB,SAAW,WACPtB,GAAQ,CACJ1J,MAAO,0DACP6I,KAAM,kBAACoC,GAAA,EAAD,MACNC,QAAS,0DACTC,OAAQ,eACRC,OAAQ,SACRC,WAAY,eACZC,KAAM,WACF,EAAKpG,MAAM2E,kBAEf0B,SAVI,WAWF1J,IAAQ2J,QAAQ,eAAM,Q,EAOhCC,kBAAoB,WAChBC,KAAWC,U,kEAlFK,IAAD,ON7BZ,IAAInK,SAAQ,SAACoK,EAASnK,GACzBoK,IAAM,sDAAsD,SAACC,EAAK1M,GAC3D0M,EACCrK,EAAO,yCAEPmK,EAAQxM,EAAK2M,YM2BhBC,MAAK,SAAAhH,GACF,EAAK8F,SAAS,CAACb,MAAOjF,KNtBZ,SAACiH,GAAD,OAAWzL,IAAM8B,IAAN,qDAAwD2J,KM0B7EC,CAFe,eACM5D,KAAKtD,GAAQ,IAE7BgH,MAAK,SAAAhH,GAAW,IAAD,EACYA,EAAO5F,KAAKA,KAAK+M,SAAS,GAA7ChN,EADO,EACPA,KAAMiN,EADC,EACDA,IAAKC,EADJ,EACIA,KACZC,EAAiB,eACrBF,EAAMG,SAASD,EAAehE,KAAK8D,GAAK,IACxCC,EAAOC,EAAehE,KAAK+D,GAAM,GACjC,EAAKvB,SAAS,CAACZ,WAAYxB,GAAOvJ,GAAOgL,YAAahL,EAAMiL,YAAagC,EAAM,IAAMC,OAGxFG,OAAM,SAAAC,GAAM,OAAIC,QAAQC,IAAIF,SAEpCD,OAAM,SAAAC,GAAM,OAAI5K,IAAQN,MAAMkL,EAAQ,MAE3Cf,KAAWkB,GAAG,SAAU3G,KAAK8E,iBAE7B9E,KAAKoE,QAAUwC,aAAY,WACvB,IAAI7C,EAAOxC,GAAW,sBAAuB,IAAIxD,MACjD,EAAK8G,SAAS,CAACd,WAChB,KAEH/D,KAAKqE,a,6CAKLoB,KAAWoB,IAAI,SAAU7G,KAAK8E,iBAE9BgC,cAAc9G,KAAKoE,W,+BAiDd,IACEnI,EAAY+D,KAAKf,MAAMrF,SAASR,KAAhC6C,SADH,EAEsE+D,KAAKxB,MAAxEsF,EAFH,EAEGA,aAAcC,EAFjB,EAEiBA,KAAMC,EAFvB,EAEuBA,MAAOC,EAF9B,EAE8BA,WAAYC,EAF1C,EAE0CA,YAAaC,EAFvD,EAEuDA,YAC3D,OACI,yBAAKjE,UAAU,UACX,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAQ6G,KAAK,QAAQ7G,UAAU,eAAe8G,QAAShH,KAAKwF,mBAEpD1B,EAAe,kBAACmD,GAAA,EAAD,MAA4B,kBAACC,GAAA,EAAD,OAGnD,mDAAUjL,GACV,kBAAC,IAAD,CAAQ/C,KAAK,OAAO8N,QAAShH,KAAK+E,UAAlC,iBAEJ,yBAAK7E,UAAU,iBACX,6BAASA,UAAU,sBAAsBF,KAAKf,MAAMlF,OAASiG,KAAKxB,MAAMzE,OACxE,yBAAKmG,UAAU,uBACX,8BAAO6D,GACP,0BAAM7D,UAAU,SAAS8D,GACzB,yBAAK7D,IAAK8D,EAAY5D,IAAI,iBAC1B,0BAAMH,UAAU,WAAWgE,GAC3B,8BAAOC,U,GAtHV7C,e,mBCrBA6F,I,8KAIb,OACI,6BACI,kBAAC,KAAD,CAAUjH,UAAU,WAAWkH,UAAQ,GACnC,6BACI,wBAAIlH,UAAU,YAAd,iEAEJ,6BACI,wBAAIA,UAAU,YAAd,iEAEJ,6BACI,wBAAIA,UAAU,YAAd,iEAEJ,6BACI,wBAAIA,UAAU,YAAd,uE,GAjBUoB,c,sDCHrB+F,GAAY,CAAC,UAAW,MAAO,UAAW,SAAU,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,WAAY,UACzGC,GAAaD,GAAUvH,OACvByH,GAAY,CAAC,OAAQ,UAAW,WAAY,OAAQ,aACpDC,GAAiBD,GAAUzH,OCInB2H,G,4MACjBjJ,MAAQ,CACJkJ,SAAS,EACTxO,KAAM,GACNyO,SAAU,GACVC,WAAW,EACXC,QAAS,GACTC,UAAW,I,EAiBfC,gB,sBAAkB,8BAAAjJ,EAAA,sEACG1C,IADH,UAEK,KADjB2C,EADY,QAENpD,OAFM,uBAGd,EAAKkJ,SAAS,CAAC+C,WAAW,IAC1BhM,IAAQN,MAAMyD,EAAOC,IAAK,GAJZ,0BAOZ2I,EAAW5I,EAAO5F,KAAK6O,KAAI,SAACtD,GAE9B,OADA,EAAKuD,QAAQvD,GACNA,KAET,EAAKG,SAAS,CAAC8C,SAASA,EAASO,UAAUN,WAAW,IAXtC,2C,EAclBK,QAAU,SAACzK,GACT,GAAG2K,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,IAAM,EACvC7K,EAAI8K,KAAO,CAACf,GAAUY,KAAKC,MAAMD,KAAKE,SAAWb,UAC9C,CAEH,IADA,IAAIe,EAAa,EAAGC,EAAa,EAC3BD,IAAeC,GACnBD,EAAaJ,KAAKC,MAAMD,KAAKE,SAAWb,IACxCgB,EAAaL,KAAKC,MAAMD,KAAKE,SAAWb,IAE1ChK,EAAI8K,KAAO,CAACf,GAAUgB,GAAahB,GAAUiB,M,EAIjDC,QAAU,WACR,EAAK5D,SAAS,CACZ6C,SAAS,EACTxO,KAAM,S,EAIVwP,WAAa,SAAChE,GACZ,EAAKG,SAAS,CACZ6C,SAAS,EACTxO,KAAM,SACN4O,UAAWpD,EAAKpH,KAChBuK,QAASnD,EAAKiE,O,EAIlBC,Y,uCAAc,WAAOlK,GAAP,mBAAAI,EAAA,sEACOxC,EAAeoC,GADtB,UAES,KADjBK,EADQ,QAEFpD,OAFE,uBAGVC,IAAQN,MAAMyD,EAAOC,IAAM,IAAK,GAHtB,0BAMP7F,EAAQ4F,EAAR5F,KACL,EAAK8O,QAAQ9O,IACT0P,EARQ,aAQU,EAAKrK,MAAMmJ,WACrBmB,QAAQ3P,GACpB,EAAK0L,SAAS,CACZ6C,SAAS,EACTC,SAAUkB,IAEZ,EAAKE,QAAQC,cAdD,4C,wDAiBdC,e,uCAAiB,WAAOvK,GAAP,SAAAI,EAAA,0DACK,EAAKN,MAAMmJ,SAAS/C,MAAK,SAACF,GAC5C,OAAOA,EAAKpH,OAASoB,EAAMwK,gBAFd,gBAMbtN,IAAQC,QAAQ,wCANH,sCAQMW,EAAkB,EAAKgC,MAAMqJ,QAASnJ,EAAMwK,cARlD,OASQ,IATR,OASHvN,QACR,EAAKkJ,SAAS,CACZ6C,SAAS,IAEX,EAAKqB,QAAQC,cACb,EAAKjB,mBAELnM,IAAQN,MAAM,oDAAa,GAhBhB,2C,wDAqBjB6N,SAAW,WAEP,EAAKJ,QAAQK,iBACZrD,MAAK,SAAArH,GAEmB,QAApB,EAAKF,MAAMtF,MAAgB,EAAK0P,YAAYlK,EAAMwK,cAC9B,WAApB,EAAK1K,MAAMtF,MAAmB,EAAK+P,eAAevK,MAEtD6H,OAAM,SAAAjL,GAAK,OAAIM,IAAQN,MAAMA,EAAMM,QAAS,O,EAGjDyN,aAAe,WACb,EAAKN,QAAQC,cACX,EAAKnE,SAAS,CACZ6C,SAAS,EACTI,UAAW,M,kEA7Gf9H,KAAK+H,oB,2CAKD/H,KAAK+I,SACP/I,KAAK+I,QAAQO,eAAe,CAC1BJ,aAAclJ,KAAKxB,MAAMsJ,c,+BA2GtB,IAAD,OAEEyB,EAAU,CACZ,CACExP,MAAO,2BACPyP,MAAO,SACPC,UAAW,OACX9G,IAAK,QAEP,CACE5I,MAAO,eACPyP,MAAO,SACP7G,IAAK,OACL+G,MAAO,MACPD,UAAW,OACXE,OAAQ,SAAArB,GAAI,OACV,oCACGA,EAAKN,KAAI,SAAA4B,GACR,IAAI7I,EAAQsG,GAAUc,KAAKC,MAAMD,KAAKE,SAAWf,KACjD,OACE,kBAAC,KAAD,CAAKvG,MAAOA,EAAO4B,IAAKiH,GACrBA,EAAIC,qBAQjB,CACE9P,MAAO,eACPyP,MAAO,SACPE,MAAO,MACP/G,IAAK,SAELgH,OAAQ,SAACjF,GAAD,OAAW,kBAAC,IAAD,CAAQsC,QAAS,WAAO,EAAK0B,WAAWhE,IAAQoF,OAAK,EAAC5Q,KAAK,SAAS4H,MAAO,CAACC,MAAO,YAAnF,+BAGzB,OACI,6BACI,kBAAC,KAAD,CACIhH,MAA2B,WAApBiG,KAAKxB,MAAMtF,KAAoB,2BAAS,2BAC/CwO,QAAS1H,KAAKxB,MAAMkJ,QACpBrC,KAAMrF,KAAKmJ,SACX7D,SAAUtF,KAAKqJ,aACfnE,OAAO,eACPE,WAAW,gBAEX,kBAAC,IAAD,CACQ9H,KAAK,eACL4C,UAAU,aACV6J,IAAK,SAACC,GAAU,EAAKjB,QAAUiB,IAEnC,kBAAC,IAAKxJ,KAAN,CACIlD,KAAK,eACLmD,MAAO,CACH,CACIC,UAAU,EACV9E,QAAS,gDAGjBqO,aAAcjK,KAAKxB,MAAMsJ,WAEzB,kBAAC,IAAD,CACI5G,YAAY,4CAK5B,kBAAC,KAAD,CAAOgJ,MAAO,kBAAC,IAAD,CAAQlD,QAAShH,KAAKyI,QAASvP,KAAK,WAAU,kBAACiR,GAAA,EAAD,MAA9C,6BACV,kBAAC,KAAD,CACAZ,QAASA,EACTa,WAAYpK,KAAKxB,MAAMmJ,SACvB0C,UAAU,EACV9E,QAASvF,KAAKxB,MAAMoJ,UACpB0C,OAAO,MACPC,WAAY,CAAC3N,SV3MR,EU2M6B4N,iBAAiB,W,GAzMjClJ,a,gCCA/BmJ,GAAUC,KAAVD,OAyLQE,GAvLdpM,aACG,SAAAC,GAAK,MAAK,KACV,CACIoM,gBCXmC,SAAAlM,GACvC,MAAO,CAACxF,KnBCqB,oBmBDIC,KAAMuF,K,gNDevCF,MAAQ,CACJxE,YAAa,GACb6Q,MAAO,EACPC,QAAS,EACTlD,WAAW,EACX3K,WAAY,cACZC,QAAS,I,EAQb6N,mB,uCAAqB,WAAOrG,GAAP,qBAAA5F,EAAA,6DACV6J,EAAejE,EAAfiE,IAAKhN,EAAU+I,EAAV/I,OACR6C,EAAoB,IAAX7C,EAAe,EAAI,EAFf,SAGEmB,EAAsB6L,EAAKnK,GAH7B,OAII,IAJJ,OAIP7C,SACF3B,EADe,aACG,EAAKwE,MAAMxE,cACrBgO,KAAI,SAACtD,GAIb,OAHGA,EAAKiE,MAAQA,IACZjE,EAAK/I,OAAS6C,GAEXkG,KAEX,EAAKG,SAAS,CACV7K,gBAES,IAAVwE,EACC5C,IAAQoP,QAAQ,4BAAS,GAEzBpP,IAAQoP,QAAQ,4BAAS,IAGhB,IAAVxM,EACC5C,IAAQoP,QAAQ,iEAAgB,GAEhCpP,IAAQoP,QAAQ,iEAAgB,GAxBvB,2C,wDA8BrBC,e,sBAAiB,sDAAAnM,EAAA,yDAAOoM,EAAP,+BAAY,GAEtB,EAAKC,SAFK,yBAGqB,EAAK3M,MAA5BvB,EAHE,EAGFA,WAAYC,EAHV,EAGUA,QAHV,SAIMF,EAAqBkO,EX1DpB,EW0DwCjO,EAAYC,GAJ3D,OAIT6B,EAJS,+CAMMrC,EAAewO,EX5Dd,GWsDP,QAMTnM,EANS,eAQQ,IAAlBA,EAAOpD,QAAc,EACAoD,EAAO5F,KAAtBiS,EADc,EACdA,KAAMP,EADQ,EACRA,MACX,EAAKhG,SAAS,CACV7K,YAAaoR,EACbP,QACAjD,WAAW,EACXkD,QAASI,IAGb,EAAKjM,MAAM2L,gBAAgBQ,KAE3B,EAAKvG,SAAS,CAAC+C,WAAW,IAC1BhM,IAAQN,MAAM,oDAAa,IApBlB,4C,EAwBjB+P,aAAe,SAAC3M,GACZ,EAAKmG,SAAS,CACV5H,WAAYyB,K,EAIpB4M,WAAa,SAACC,GACV,EAAK1G,SAAS,CACV3H,QAASqO,EAAMC,OAAO9M,S,EAI9B+M,cAAgB,WACW,KAAvB,EAAKjN,MAAMtB,QAAiB,EAAKiO,UAAW,EAAQ,EAAKA,UAAW,EACpE,EAAKF,kB,kEAxELjL,KAAKiL,mB,+BA2EA,IAAD,OACE1B,EAAU,CACZ,CACIxP,MAAO,2BACP0P,UAAW,OACXD,MAAO,SACPE,MAAO,MACP/G,IAAK,QAET,CACI5I,MAAO,2BACP0P,UAAW,OACXD,MAAO,SACP7G,IAAK,QAET,CACI5I,MAAO,eACP0P,UAAW,QACXD,MAAO,SACPE,MAAO,MACP/G,IAAK,QACLgH,OAAQ,SAAC+B,GACL,OAAO,8BAAO,SAAMA,KAG5B,CACI3R,MAAO,eACPyP,MAAO,SACPE,MAAO,MACP/G,IAAK,SACLgH,OAAQ,SAACjF,GACL,OAAmB,IAAhBA,EAAK/I,OAEA,6BACI,kBAAC,IAAD,CAAQgQ,QAAM,EAACzS,KAAK,UAAU8N,QAAS,WAAO,EAAK+D,mBAAmBrG,KAAtE,gBAAyF,6BACzF,+CAKJ,6BACI,kBAAC,IAAD,CAAQxL,KAAK,UAAU8N,QAAS,WAAO,EAAK+D,mBAAmBrG,KAA/D,gBAAkF,6BAClF,uDAMpB,CACI3K,MAAO,eACPyP,MAAO,SACPE,MAAO,MACP/G,IAAK,YACLgH,OAAQ,SAACjF,GACL,OACI,6BACI,kBAAC,IAAD,CAAQxL,KAAK,OAAO8N,QAAS,WAAO,EAAK/H,MAAMC,QAAQC,KAAnB,2CAA4DuF,EAAKiE,QAArG,gBAAyH,6BACzH,kBAAC,IAAD,CAAQzP,KAAK,OAAO8N,QAAS,WAAO,EAAK/H,MAAMC,QAAQC,KAAnB,+CAAgEuF,EAAKiE,QAAzG,oBAMpB,OACI,kBAAC,KAAD,CACI5O,MACI,6BACI,kBAAC,KAAD,CAAQ6R,aAAa,cAAc9K,MAAO,CAAC4I,MAAO,MAAOmC,SAAU7L,KAAKqL,cACpE,kBAACZ,GAAD,CAAQ/L,MAAM,eAAd,kCACA,kBAAC+L,GAAD,CAAQ/L,MAAM,eAAd,mCAEJ,kBAAC,IAAD,CAAOwC,YAAY,qBAAMJ,MAAO,CAAC4I,MAAO,MAAOoC,WAAY,MAAOC,YAAU,EAACF,SAAU7L,KAAKsL,aAC5F,kBAAC,IAAD,CAAQpS,KAAK,UAAU4H,MAAO,CAACgL,WAAY,MAAO9E,QAAShH,KAAKyL,eAAe,kBAACO,GAAA,EAAD,MAA/E,iBAGR9B,MAAO,kBAAC,IAAD,CAAQhR,KAAK,UAAU8N,QAAS,WAAO,EAAK/H,MAAMC,QAAQC,KAAK,0CAA0C,kBAAC8M,GAAA,EAAD,MAAzG,6BAEP,kBAAC,KAAD,CACI7B,WAAYpK,KAAKxB,MAAMxE,YACvBuP,QAASA,EACTc,UAAQ,EACRE,WAAY,CAAC3N,SAAU,EAAG4N,iBAAiB,EAAMK,MAAO7K,KAAKxB,MAAMqM,MAAOC,QAAS9K,KAAKxB,MAAMsM,QAASe,SAAS7L,KAAKiL,gBACrHX,OAAO,MACP/E,QAASvF,KAAKxB,MAAMoJ,iB,GA1KlBtG,e,mCEXfmJ,GAAUC,KAAVD,OAGcyB,G,4MACjB1N,MAAQ,CACJoJ,WAAW,EACXuE,YAAY,EACZC,MAAO,GACPC,MAAO,GACPjT,KAAM,GACNF,KAAM,O,EAwBVoT,Y,sBAAc,kCAAAxN,EAAA,sEACSb,KADT,OAEW,KADjBc,EADM,QAEApD,QAAc,EACCoD,EAAO5F,KAAvBkT,EADc,EACdA,MAAOD,EADO,EACPA,MACZ,EAAKvH,SAAS,CAACuH,QAAOC,MAAOA,EAAMnE,aAEnCtM,IAAQN,MAAM,2DAAe,GAEjC,EAAKuJ,SAAS,CAAC+C,WAAW,IARhB,2C,EAWd2E,aAAe,SAAC7H,GAAU,IACfiE,EAAwCjE,EAAxCiE,IAAK1M,EAAmCyI,EAAnCzI,SAAUuQ,EAAyB9H,EAAzB8H,QAASC,EAAgB/H,EAAhB+H,MAAOC,EAAShI,EAATgI,MACnC/D,EACC,EAAK9D,SAAS,CAACzL,KAAM,CAACuP,MAAK1M,WAAUuQ,UAASC,QAAOC,SAAQxT,KAAM,YAEhE,EAAK6P,SACJ,EAAKA,QAAQC,cAEjB,EAAKnE,SAAS,CAAC3L,KAAM,SAEzB,EAAK2L,SAAS,CAACsH,YAAY,K,EAG/BQ,YAAc,WAEV,EAAK5D,QAAQK,iBACRrD,MAAK,SAAArH,GACF,GAAuB,QAApB,EAAKF,MAAMtF,KACVgF,GAAWQ,GAAOqH,MAAK,SAAAhH,GACE,IAAlBA,EAAOpD,QACNC,IAAQoP,QAAQ,4BAAS,GACzB,EAAKsB,cACF,EAAKvD,SACJ,EAAKA,QAAQC,cAEjB,EAAKnE,SAAS,CAACsH,YAAY,KAE3BvQ,IAAQC,QAAQkD,EAAOC,IAAM,IAAK,UAGzC,CAAC,IACK2J,EAAO,EAAKnK,MAAMpF,KAAlBuP,IACA1M,EAA6CyC,EAA7CzC,SAAUyQ,EAAmChO,EAAnCgO,MAAOD,EAA4B/N,EAA5B+N,MAAOD,EAAqB9N,EAArB8N,QAAStQ,EAAYwC,EAAZxC,SACxC,EAAK0Q,MAAO,EACZzO,GAAc,CAACwK,MAAK1M,WAAUwQ,QAAOvQ,WAAUwQ,QAAOF,YAAUzG,MAAK,SAAArH,GAC7C,IAAjBA,EAAM/C,QACLC,IAAQoP,QAAQ,4BAAS,GACzB,EAAKsB,cACF,EAAKvD,SACJ,EAAKA,QAAQC,cAEjB,EAAKnE,SAAS,CAACsH,YAAY,MAE3BvQ,IAAQN,MAAM,2DAAe,GAC7B,EAAKuJ,SAAS,CAACsH,YAAY,YAK1C5F,OAAM,SAAAjL,GAAK,OAAIM,IAAQN,MAAM,wCAAW,O,EAGjDuR,gBAAkB,WACd,EAAK9D,QAAQC,cACb,EAAKnE,SAAS,CAACsH,YAAY,K,EAI/B1I,QAAU,SAACiB,GACPhB,KAAMD,QAAQ,CACZ1J,MAAO,2BACP6I,KAAM,kBAACoC,GAAA,EAAD,MACNC,QAAS,wCACTC,OAAQ,eACRE,WAAY,eACZC,KAAM,WACJ,EAAKzB,eAAec,EAAKiE,MAE3BrD,SATY,WAUV1J,IAAQ2J,QAAQ,eAAM,Q,EAK9B3B,e,uCAAiB,WAAOkJ,GAAP,SAAAhO,EAAA,sEACMV,GAAc0O,GADpB,OAEQ,IAFR,OAEHnR,QACNC,IAAQoP,QAAQ,4BAAS,GACzB,EAAKsB,eAEL1Q,IAAQN,MAAM,4BAAS,GANd,2C,wHAzGb0E,KAAKsM,gB,2CAKL,GAA8B,IAA3BtM,KAAKxB,MAAMpF,KAAK0G,QACQ,QAApBE,KAAKxB,MAAMtF,MACN8G,KAAK+I,QAAS,CAAC,IAAD,EAC4B/I,KAAKxB,MAAMpF,KAA9C6C,EADO,EACPA,SAAUuQ,EADH,EACGA,QAASC,EADZ,EACYA,MAAOC,EADnB,EACmBA,MACjC1M,KAAK+I,QAAQO,eAAe,CACxBrN,WACAyQ,QACAF,UACAC,a,+BAsGX,IAAD,SACgDzM,KAAKxB,MAAlDoJ,EADH,EACGA,UAAWuE,EADd,EACcA,WAAYC,EAD1B,EAC0BA,MAAOC,EADjC,EACiCA,MAAOnT,EADxC,EACwCA,KACtCqQ,EAAU,CACZ,CACIxP,MAAO,qBACP0P,UAAW,WACXD,MAAO,SACP7G,IAAK,YAET,CACI5I,MAAO,eACP0P,UAAW,QACXD,MAAO,SACP7G,IAAK,SAET,CACI5I,MAAO,eACP0P,UAAW,QACXD,MAAO,SACP7G,IAAK,SAET,CACI5I,MAAO,2BACP0P,UAAW,cACXD,MAAO,SACP7G,IAAK,cACLgH,OAAQ,SAAA5F,GAAI,OAAIgJ,KAAMhJ,GAAMiJ,OAAO,yBAEvC,CACIjT,MAAO,2BACP0P,UAAW,UACXD,MAAO,SACP7G,IAAK,WACLgH,OAAQ,SAAAmD,GAAE,OAAIV,EAAMxH,MAAM,SAAAF,GAAI,OAAIA,EAAKiE,MAAQmE,KAAKxP,OAExD,CACIvD,MAAO,eACP4I,IAAK,YACL6G,MAAO,SACPG,OAAQ,SAACjF,GACL,OACI,6BACI,kBAAC,IAAD,CAAQxL,KAAK,OAAO8N,QAAS,WAAO,EAAKuF,aAAa7H,KAAtD,gBACA,kBAAC,IAAD,CAAQxL,KAAK,OAAO8N,QAAS,WAAO,EAAKvD,QAAQiB,KAAjD,oBAMpB,OACI,6BACI,kBAAC,KAAD,CACI3K,MAAgB,QAATb,EAAiB,2BAAS,2BACjCwO,QAASyE,EACT9G,KAAMrF,KAAK2M,YACXrH,SAAUtF,KAAK6M,gBACf3H,OAAO,eACPE,WAAW,gBAEX,kBAAC,IAAD,CACQ9H,KAAK,eACL4C,UAAU,aACV+M,SAAU,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7BrD,IAAK,SAACC,GAAU,EAAKjB,QAAUiB,IAEnC,kBAAC,IAAKxJ,KAAN,CACIlD,KAAK,WACL+P,MAAM,qBACN5M,MAAO,CACH,CACIC,UAAU,EACV9E,QAAS,+CAEb,CACI+E,IAAK,EACL/E,QAAS,kEAEb,CACIgF,IAAK,GACLhF,QAAS,mEAEb,CACIiF,QAAS,QACTjF,QAAS,iGAIjB,kBAAC,IAAD,CACIsF,YAAY,0CAGpB,kBAAC,IAAKV,KAAN,CACIlD,KAAK,WACL+P,MAAM,eACN5M,MAAO,CACC,CACIC,UAAU,EACV9E,QAAS,yCAEb,CACI+E,IAAK,EACL/E,QAAS,4DAEb,CACIgF,IAAK,GACLhF,QAAS,6DAEb,CACIiF,QAAS,QACTjF,QAAS,2FAKrB,kBAAC,IAAD,CACIsF,YAAY,iCACZhI,KAAK,cAGb,kBAAC,IAAKsH,KAAN,CACIlD,KAAK,QACL+P,MAAM,2BACN5M,MAAO,CACH,CACIC,UAAU,EACV9E,QAAS,qDAEb,CACIiF,QAAS,6EACTjF,QAAS,+EAIjB,kBAAC,IAAD,CACIsF,YAAY,gDAGpB,kBAAC,IAAKV,KAAN,CACIlD,KAAK,QACL+P,MAAM,eACN5M,MAAO,CACH,CACIC,UAAU,EACV9E,QAAS,yCAEb,CACI1C,KAAM,QACN0C,QAAS,mEAIjB,kBAAC,IAAD,CACI1C,KAAK,QACLgI,YAAY,oCAGpB,kBAAC,IAAKV,KAAN,CACIlD,KAAK,UACL+P,MAAM,eACN5M,MAAO,CACH,CACIC,UAAU,EACV9E,QAAS,iDAIjB,kBAAC,KAAD,CAAQsF,YAAY,8CAEZkL,EAAMpE,KAAI,SAACtD,GAAD,OAAW,kBAAC,GAAD,CAAQhG,MAAOgG,EAAKiE,IAAKhG,IAAK+B,EAAKiE,KAAMjE,EAAKpH,aAMvF,kBAAC,KAAD,CAAMvD,MAAO,kBAAC,IAAD,CAAQb,KAAK,UAAU8N,QAAShH,KAAKuM,cAAc,kBAACe,GAAA,EAAD,MAAnD,6BACT,kBAAC,KAAD,CAAOlD,WAAYiC,EAAO9C,QAASA,EAASc,UAAQ,EAACC,OAAO,MAAM/E,QAASqC,U,GA7S7DtG,a,sBCiNnBiM,GAhNdhP,aACG,SAAAC,GAAK,MAAK,CAACvC,SAAUuC,EAAM5E,SAASR,KAAK6C,YACzC,G,gNAIAuC,MAAQ,CACJ2N,YAAY,EACZqB,aAAa,EACbC,SAAU,GACVC,SAAU,GACVC,YAAa,GACbhF,IAAK,GACLiF,MAAO,GACPhG,WAAW,G,EAefiG,Y,sBAAc,4BAAA/O,EAAA,sEACSlB,KADT,OAEW,KADjBmB,EADM,QAEApD,OACN,EAAKkJ,SAAS,CAAC4I,SAAU1O,EAAO5F,KAAK+O,UAAWN,WAAW,IAE3DhM,IAAQN,MAAM,yFAAoB,GAL5B,2C,EASdwS,YAAc,WACV,EAAKjJ,SAAS,CAACsH,YAAY,K,EAG/B4B,SAAW,SAACrJ,GACR,IAAMoI,EAAKpI,EAAKiE,IAGhB,GAFoBjE,EAAb5G,UAEM,OAEuB,EAAKU,MAA9BiP,EAFE,EAEFA,SAAUE,EAFR,EAEQA,YACb5O,EAAS0O,EAAS7I,MAAK,SAACF,GAAD,OAAUA,EAAKiE,MAAQmE,KAClD,GAAG/N,EAAO,CACN,IAAIiP,EAAc,uBAAOL,GAAP,aAAuB5O,EAAO6O,QAChD,EAAKD,YAAcK,EACnB,EAAKnJ,SAAS,CAAC8I,YAAaK,UAIhC,EAAKnJ,SAAS,CAAC8I,YAAa,CAAC,UAEjC,EAAK9I,SAAS,CAAC2I,aAAa,EAAM7E,IAAKmE,K,EAG3CH,YAAc,WAEV,EAAK5D,QAAQK,iBACRrD,MAAK,SAAArH,GACW,EAAKF,MAAMiP,SAAS7I,MAAK,SAACF,GAAD,OAAUA,EAAKpH,OAASoB,EAAMf,YACzD/B,IAAQC,QAAQ,kCAAU,GAChC,EAAKoS,QAAQvP,EAAMf,aAE3B4I,OAAM,SAAAjL,GAAK,OAAIM,IAAQN,MAAMA,EAAMM,QAAS,O,EAGrDqS,Q,uCAAU,WAAMtQ,GAAN,iBAAAmB,EAAA,sEACapB,GAAWC,GADxB,OAEe,KADjBoB,EADE,QAEIpD,SACFuS,EADe,aACG,EAAK1P,MAAMiP,WACrB3E,QAAQ/J,EAAO5F,MAC3ByC,IAAQoP,QAAQ,4BAAS,GACzB,EAAKnG,SAAS,CAACsH,YAAY,EAAOsB,SAAUS,KAE5CtS,IAAQN,MAAM,iEAAgB,GAR5B,2C,wDAYVuR,gBAAkB,WACd,EAAK9D,QAAQC,cACb,EAAKnE,SAAS,CAACsH,YAAY,K,EAG/BgC,a,sBAAe,kCAAArP,EAAA,2DACU,EAAKN,MAAnBoP,EADI,EACJA,MAAOjF,EADH,EACGA,IACM,IAAjBiF,EAAM9N,OAFE,uBAGDsO,EAAY,EAAKnP,MAAMhD,SAHtB,SAIY4B,GAAY,CAAC+P,QAAOjF,MAAKyF,cAJrC,OAKc,IALd,OAKGzS,QACNC,IAAQoP,QAAQ,4BAAS,GACzB,EAAK6C,cACL,EAAKhJ,SAAS,CAAC2I,aAAa,KAE5B5R,IAAQN,MAAM,+CAAa,GAVxB,uBAaPM,IAAQC,QAAQ,0DAAc,GAbvB,4C,EAkBfwS,iBAAmB,WACf,EAAKxJ,SAAS,CAAC2I,aAAa,EAAOG,YAAa,M,EAGpDW,QAAU,SAACV,GAEP,EAAK/I,SAAS,CAAC+I,QAAOD,YAAaC,K,kEAhGnC5N,KAAK6N,cAEL,IAAIU,EAAc,CAAC,CAACxU,MAAO,2BAAQ4I,IAAK,IAAKM,SAAUP,KACvD1C,KAAK6E,SAAS,CAAC6I,SAAUa,M,2CAGtBvO,KAAK+I,SACJ/I,KAAK+I,QAAQC,gB,+BA4FZ,IAAD,OACEO,EAAU,CACZ,CACIxP,MAAO,2BACPyP,MAAO,SACPC,UAAW,OACX9G,IAAK,QAET,CACI5I,MAAO,2BACPyP,MAAO,SACPC,UAAW,cACXE,OAAQ,SAAA5F,GAAI,OAAKgJ,KAAMhJ,GAAMiJ,OAAO,yBAExC,CACIjT,MAAO,2BACPyP,MAAO,SACPC,UAAW,YACX9G,IAAK,YACLgH,OAAQ,SAAC5F,GAAD,OAAUA,EAAOgJ,KAAMhJ,GAAMiJ,OAAO,uBAAyB,KAEzE,CACIjT,MAAO,qBACPyP,MAAO,SACPC,UAAW,YACX9G,IAAK,aAET,CACI5I,MAAO,eACPyP,MAAO,SACP7G,IAAK,YACLgH,OAAQ,SAACjF,GAAD,OAAW,kBAAC,IAAD,CAAQxL,KAAK,OAAO8N,QAAS,WAAO,EAAK+G,SAASrJ,KAAlD,+BA/BvB,EAmC6D1E,KAAKxB,MAA/DiP,EAnCH,EAmCGA,SAAUtB,EAnCb,EAmCaA,WAAYuB,EAnCzB,EAmCyBA,SAAU9F,EAnCnC,EAmCmCA,UAAW+F,EAnC9C,EAmC8CA,YAClD,OACI,6BACI,kBAAC,KAAD,CACI5T,MAAM,2BACN2N,QAASyE,EACT9G,KAAMrF,KAAK2M,YACXrH,SAAUtF,KAAK6M,gBACf3H,OAAO,eACPE,WAAW,gBAEX,kBAAC,IAAD,CACQ9H,KAAK,eACL4C,UAAU,aACV6J,IAAK,SAACC,GAAU,EAAKjB,QAAUiB,IAEnC,kBAAC,IAAKxJ,KAAN,CACIlD,KAAK,WACL+P,MAAM,2BACN5M,MAAO,CACH,CACIC,UAAU,EACV9E,QAAS,iDAIjB,kBAAC,IAAD,CACIsF,YAAY,4CAK5B,kBAAC,KAAD,CAAMnH,MAAO,kBAAC,IAAD,CAAQiN,QAAShH,KAAK8N,YAAa5U,KAAK,WAAU,kBAACsV,GAAA,EAAD,MAAlD,6BACT,kBAAC,KAAD,CAAOpE,WAAYqD,EAAUlE,QAASA,EAASc,UAAQ,EAACC,OAAO,MAAM/E,QAASqC,EAAW2C,WAAY,CAAC3N,Sd5LjG,Ec4LsH4N,iBAAiB,MAEhJ,kBAAC,KAAD,CACIzQ,MAAM,2BACN2N,QAAS1H,KAAKxB,MAAMgP,YACpBnI,KAAMrF,KAAKmO,aACX7I,SAAUtF,KAAKqO,iBACfnJ,OAAO,eACPE,WAAW,gBAEX,kBAAC,KAAD,CACIqJ,WAAS,EACTH,QAAStO,KAAKsO,QACdI,kBAAgB,EAChBC,SAAUjB,EACVC,YAAaA,U,GApMlBrM,e,wBTRfsN,GAAY,GACZC,GAAQ,GACRC,GAAQ,GACHC,GAAI,EAAGA,GAAI,GAAIA,KACpBH,GAAUzP,KAAK4P,GAAI,UACnBF,GAAM1P,KAAsB,GAAhBgJ,KAAKE,UACjByG,GAAM3P,KAAsB,IAAhBgJ,KAAKE,SAAkB,I,UAIlB2G,G,4MAEjBC,UAAY,WACR,MAAO,CACHlV,MAAO,CACHmV,KAAM,IAEVC,OAAQ,CACJhW,KAAM,CAAC,eAAM,iBAEjBiW,QAAS,CAELC,QAAS,CACLC,UAAW,CACPpW,KAAM,CAAC,QAAS,UAEpBqW,SAAU,GACVC,YAAa,CACTC,WAAY,KAIxBC,QAAS,GACTC,MAAO,CACHxW,KAAMyV,GACNgB,UAAW,CACPC,MAAM,IAGdC,MAAO,GAEPC,OAAQ,CAAC,CACLzS,KAAM,eACNpE,KAAM,MACNC,KAAM0V,GACNmB,eAAgB,SAAUC,GACtB,OAAa,GAANA,IAEZ,CACC3S,KAAM,eACNpE,KAAM,MACNC,KAAM2V,GACNkB,eAAgB,SAAUC,GACtB,OAAa,GAANA,EAAW,OAG1BC,gBAAiB,aACjBC,qBAAsB,SAAUF,GAC5B,OAAa,EAANA,K,uDAMf,OACI,kBAAC,KAAD,CAAcG,OAAQpQ,KAAKiP,YAAanO,MAAO,CAAC4I,MAAO,OAAQ2G,OAAQ,c,GAvDlD/O,aUXZgP,G,4MACjBrB,UAAY,WACR,MAAO,CACHU,MAAO,CACHzW,KAAM,WACNC,KAAM,CAAC,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,iCAAS,2BAAQ,6BAE5F2W,MAAO,CACH5W,KAAM,SAEV6W,OAAQ,CAAC,CACL5W,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KACvDD,KAAM,OACNqX,QAAQ,M,uDAKhB,OACI,kBAAC,KAAD,CAAcH,OAAQpQ,KAAKiP,YAAanO,MAAO,CAAC4I,MAAO,OAAQ2G,OAAQ,c,GAnBjD/O,aCAbkP,G,4MAEjBvB,UAAY,WACR,MAAO,CACHS,QAAS,CACLe,QAAS,OACTC,UAAW,4BAEfvB,OAAQ,CACJwB,OAAQ,WACRC,KAAM,GACNzX,KAAM,CAAC,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,2BAAQ,iCAAS,2BAAQ,6BAE5F4W,OAAQ,CACJ,CACIzS,KAAM,eACNpE,KAAM,MACN2X,aAAc,SACdC,OAAQ,CAAC,EAAG,OAEZzD,MAAO,CACH0D,SAAU,SAEdC,UAAW,CACPnB,MAAM,GAEV1W,KAAM,CACF,CAACuF,MAAO,IAAKpB,KAAM,2BAAQ2T,UAAU,GACrC,CAACvS,MAAO,IAAKpB,KAAM,4BACnB,CAACoB,MAAO,KAAMpB,KAAM,8BAG5B,CACIA,KAAM,eACNpE,KAAM,MACN4X,OAAQ,CAAC,MAAO,OAChBzD,MAAO,CACHqD,UAAW,yDACXQ,gBAAiB,OACjBC,YAAa,OACbC,YAAa,EACbC,aAAc,EAMdC,KAAM,CACFxS,EAAG,CACCiC,MAAO,OACPwQ,WAAY,GACZ/H,MAAO,UASXgI,GAAI,CACAL,YAAa,OACbzH,MAAO,OACP0H,YAAa,GACbf,OAAQ,GAEZoB,EAAG,CACCC,SAAU,GACVH,WAAY,IAEhBI,IAAK,CACD5Q,MAAO,OACPmQ,gBAAiB,UACjBU,QAAS,CAAC,EAAG,GACbP,aAAc,KAI1BlY,KAAM,CACF,CAACuF,MAAO,IAAKpB,KAAM,4BACnB,CAACoB,MAAO,IAAKpB,KAAM,4BACnB,CAACoB,MAAO,IAAKpB,KAAM,4BACnB,CAACoB,MAAO,IAAKpB,KAAM,4BACnB,CAACoB,MAAO,GAAIpB,KAAM,4BAClB,CAACoB,MAAO,GAAIpB,KAAM,4BAClB,CAACoB,MAAO,IAAKpB,KAAM,4BACnB,CAACoB,MAAO,IAAKpB,KAAM,4BACnB,CAACoB,MAAO,IAAKpB,KAAM,kCACnB,CAACoB,MAAO,IAAKpB,KAAM,4BACnB,CAACoB,MAAO,IAAKpB,KAAM,iC,uDAOnC,OACI,kBAAC,KAAD,CAAc8S,OAAQpQ,KAAKiP,YAAanO,MAAO,CAAC4I,MAAO,OAAQ2G,OAAQ,c,GAjGlD/O,a,UCIzBuQ,I,QAAYC,KAAZD,SAyEOE,GAvEdxT,aACG,SAAAC,GAAK,MAAK,CACNzE,MAAOyE,EACPvC,SAAUuC,EAAM5E,SAASR,KAAK6C,SAC9BwR,SAAUjP,EAAM5E,SAASR,KAAK4Y,KAAKpE,SAEvC,CACIqE,UCf6B,SAAAvT,GACjC,MAAO,CAACxF,KzBAc,ayBAIC,KAAMuF,K,IDiBnCmF,Y,+MAEGqO,eAAiB,SAAC9G,GACd,OAAOA,EAAKpD,KAAI,SAACtD,GACb,OAAG,EAAKyN,QAAQzN,GACRA,EAAKzB,SAUD,kBAAC4O,GAAD,CAASlP,IAAK+B,EAAK/B,IAAKC,KAAM,kBAAC8B,EAAK9B,KAAN,MAAe7I,MAAO2K,EAAK3K,OACpD,EAAKmY,eAAexN,EAAKzB,WAT9B,kBAAC,KAAKzC,KAAN,CAAWwG,QAAS,WAAO,EAAK/H,MAAMgT,UAAUvN,EAAK3K,QAAS4I,IAAK+B,EAAK/B,IAAKC,KAAM,kBAAC8B,EAAK9B,KAAN,OAC/E,kBAAC,IAAD,CAAM3C,GAAIyE,EAAK5B,MACV4B,EAAK3K,QAYf,0BAAM4I,IAAK+B,EAAK/B,U,EAKnCwP,QAAU,SAACzN,GAAU,IAAD,EACa,EAAKzF,MAA3BhD,EADS,EACTA,SAAUwR,EADD,EACCA,SACjB,MAAgB,UAAbxR,IAEOyI,EAAKzB,SAENyB,EAAKzB,SACHyB,EAAKzB,SAASmP,MAAK,SAACC,GAAD,OAA4C,IAAjC5E,EAAShJ,QAAQ4N,EAAM1P,aAD1D,GADqC,IAAhC8K,EAAShJ,QAAQC,EAAK/B,O,uDAOjC,OACI,6BACI,gCACI,yBAAKxC,IAAKC,KAAMC,IAAI,SACpB,uEAEJ,kBAAC,KAAD,CACIiS,aAActS,KAAKf,MAAMqF,SAASC,SAASC,MAAM,KAAK+N,MAAM,GAE5DC,KAAK,SACLC,MAAM,OACNC,gBAAiB1S,KAAKf,MAAMqF,SAASC,SAASC,MAAM,KAAK+N,MAAM,IAI/DvS,KAAKkS,eAAexP,U,GApDlBpB,e,yCEoEPqR,I,QAjFdpU,aACG,SAAAC,GAAK,MAAK,CAACxE,YAAawE,EAAMxE,eAC9B,G,gNAIAwE,MAAQ,CACJoU,cAAe,I,EAoBnBC,iB,uCAAmB,WAAO/F,GAAP,eAAAhO,EAAA,sEACI3B,EAAiB2P,GADrB,OAEM,KADjB/N,EADW,QAELpD,OACN,EAAKmX,mBAAmB/T,EAAO5F,MAE/ByC,IAAQN,MAAM,iEAAgB,GALnB,2C,wDASnBwX,mB,uCAAqB,WAAO3Z,GAAP,eAAA2F,EAAA,sEACE1B,GAAmBjE,EAAKsD,YAD1B,OAEI,KADjBsC,EADa,QAEPpD,QACNxC,EAAKsD,WAAasC,EAAO5F,KAAKmE,KAC9B,EAAKuH,SAAS,CAAC+N,cAAezZ,KAE9ByC,IAAQN,MAAM,iEAAgB,GANjB,2C,wHA1BF,IAERwR,EAAM9M,KAAKf,MAAM8T,MAAMlW,OAAvBiQ,GACA9S,EAAegG,KAAKf,MAApBjF,YAEP,GAAGA,EAAY,CACX,IAAI+E,EAAS/E,EAAY4K,MAAK,SAACF,GAC3B,OAAOA,EAAKiE,MAAQmE,KAErB/N,GACCiB,KAAK8S,mBAAmB/T,QAG5BiB,KAAK6S,iBAAiB/F,K,+BAuBpB,IAAD,SACiD9M,KAAKxB,MAAMoU,cAA1DnW,EADF,EACEA,WAAYuW,EADd,EACcA,KAAMC,EADpB,EACoBA,OAAQC,EAD5B,EAC4BA,KAAM5V,EADlC,EACkCA,KAAMoO,EADxC,EACwCA,MAC7C,OACI,kBAAC,KAAD,CAAM3R,MAAO,kBAAC,IAAD,CAAQb,KAAK,OAAOgH,UAAU,UAAU8G,QAAS,WAAO,EAAK/H,MAAMC,QAAQiU,WAAW,kBAACC,GAAA,EAAD,CAAoBlT,UAAU,cAApH,6BACT,kBAAC,KAAD,CACI6G,KAAK,QACLsD,UAAQ,GAER,kBAAC,KAAK7J,KAAN,CAAWM,MAAO,CAACuS,eAAgB,eAC/B,0BAAMnT,UAAU,SAAhB,6BAAqC5C,GAAc,kBAACgW,GAAA,EAAD,OAEvD,kBAAC,KAAK9S,KAAN,CAAWM,MAAO,CAACuS,eAAgB,eAC/B,0BAAMnT,UAAU,SAAhB,6BAAqC8S,GAAc,kBAACM,GAAA,EAAD,OAEvD,kBAAC,KAAK9S,KAAN,CAAWM,MAAO,CAACuS,eAAgB,eAC/B,0BAAMnT,UAAU,SAAhB,6BAAqCwL,EAAQ,SAAMA,EAAQ,kBAAC4H,GAAA,EAAD,OAE/D,kBAAC,KAAK9S,KAAN,CAAWM,MAAO,CAACuS,eAAgB,eAC/B,0BAAMnT,UAAU,SAAhB,6BAAqCzD,GAA0B,kBAAC6W,GAAA,EAAD,OAEnE,kBAAC,KAAK9S,KAAN,CAAWM,MAAO,CAACuS,eAAgB,eAC/B,0BAAMnT,UAAU,SAAhB,4BACIgT,EAAOA,EAAKlL,KAAI,SAACtD,EAAM6O,GAAP,OAAkB,yBAAKpT,IAAKpE,EAAW,WAAa2I,EAAMrE,IAAI,2BAAOsC,IAAK4Q,EAAOzS,MAAO,CAAC4I,MAAM,cAAqB,kBAAC4J,GAAA,EAAD,QAG5I,kBAAC,KAAK9S,KAAN,CAAWM,MAAO,CAACuS,eAAgB,eAC/B,0BAAMnT,UAAU,SAAhB,6BACA,8BAAO+S,EAAS,0BAAMO,wBAAyB,CAACC,OAAQR,KAAmB,kBAACK,GAAA,EAAD,c,GArEvEhS,e,eCN5B,SAASoS,GAAUC,GACjB,OAAO,IAAIpY,SAAQ,SAACoK,EAASnK,GAC3B,IAAMoY,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,OAAS,kBAAMpO,EAAQiO,EAAO7U,SACrC6U,EAAOI,QAAU,SAAA1Y,GAAK,OAAIE,EAAOF,O,UAIhB2Y,G,4MACnBzV,MAAQ,CACN0V,gBAAgB,EAChBC,aAAc,GACdC,aAAc,GACdC,SAAU,I,EAGZC,YAAc,SAACpB,GACb,IAAImB,EAAW,GACfnB,EAAK1T,SAAQ,SAACkF,EAAM6O,GAAWc,EAASlV,KAAK,CAACoV,KAAMhB,EAAOjW,KAAM,2BAAQkX,IAAKzY,EAAW,WAAa2I,OACtG,EAAKG,SAAS,CAACwP,c,EAGjBhL,aAAe,WAAO,EAAKxE,SAAS,CAAEqP,gBAAgB,K,EAEtDO,c,uCAAgB,WAAMd,GAAN,SAAA7U,EAAA,yDACT6U,EAAKa,KAAQb,EAAKe,QADT,gCAGShB,GAAUC,EAAKgB,eAHxB,OAGZhB,EAAKe,QAHO,cAKdjO,QAAQC,IAAIiN,EAAKa,KAEjB,EAAK3P,SAAS,CACZsP,aAAcR,EAAKa,KAAOb,EAAKe,QAC/BR,gBAAgB,EAChBE,aAAcT,EAAKrW,MAAQqW,EAAKa,IAAII,UAAUjB,EAAKa,IAAIK,YAAY,KAAO,KAV9D,2C,wDAchBxJ,a,uCAAe,+BAAAvM,EAAA,yDAAQuV,EAAR,EAAQA,SACF,UADYV,EAAlB,EAAkBA,MACvBhY,QAENC,IAAQoP,QAAQ,4BAAS,GACzBqJ,EAASA,EAASvU,OAAS,GAAGxC,KAAO,2BACrC+W,EAASA,EAASvU,OAAS,GAAG0U,IAAMzY,EAAW,WAAa4X,EAAKlY,SAAStC,KAAKmE,KAC/E+W,EAASA,EAASvU,OAAS,GAAGyU,IAAMZ,EAAKlY,SAAStC,KAAKmE,KACvD,EAAKuH,SAAS,CAACwP,cACQ,UAAhBV,EAAKhY,SACZC,IAAQN,MAAM,iEAAgB,GAC9B,EAAKuJ,SAAS,CAACwP,cAEE,YAAhBV,EAAKhY,OAZK,gCAaQ0B,GAAesW,EAAKY,KAb5B,OAcU,IAdV,OAcD5Y,QACRC,IAAQoP,QAAQ,4BAAS,GACzB,EAAKnG,SAAS,CAACwP,cAEfzY,IAAQN,MAAM,+CAAa,GAlBlB,2C,wDAwBfwZ,aAAe,WACb,IAAIC,EAAW,GAMf,OALY,aAAO,EAAKvW,MAAM6V,UACrB7U,SAAQ,SAACkF,GAChBqQ,EAAS5V,KAAKuF,EAAK6P,QAGdQ,G,uDAGC,IAAD,EACwD/U,KAAKxB,MAA7D0V,EADA,EACAA,eAAgBC,EADhB,EACgBA,aAAcE,EAD9B,EAC8BA,SAAUD,EADxC,EACwCA,aACzCY,EACJ,6BACE,kBAAC/I,GAAA,EAAD,MACA,yBAAKnL,MAAO,CAACmU,UAAW,IAAxB,WAGJ,OACE,oCACE,kBAAC,KAAD,CACEnb,OAAM,UAAKiC,EAAL,sBACNmZ,OAAO,OACP5X,KAAK,QACL6X,SAAS,eACTd,SAAUA,EACVe,UAAWpV,KAAKyU,cAChB5I,SAAU7L,KAAKqL,cAGdgJ,EAASvU,QAAU,EAAI,KAAOkV,GAEjC,kBAAC,KAAD,CACEtN,QAASwM,EACTna,MAAOqa,EACPiB,OAAQ,KACR/P,SAAUtF,KAAKqJ,cAEf,yBAAKhJ,IAAI,UAAUS,MAAO,CAAC4I,MAAO,QAASvJ,IAAKgU,U,GA5FhBmB,IAAMhU,W,8DCP3BiU,I,oNACnB/W,MAAQ,CACNgX,YAAaC,eAAYC,e,EAG3BC,oBAAsB,SAACH,GAErB,EAAK3Q,SAAS,CACZ2Q,iB,EAIJI,QAAU,SAACC,GACT,IAAMC,EAAeC,KAAYF,GACjC,GAAIC,EAAc,CAChB,IAAME,EAAeC,gBAAaC,qBAAqBJ,EAAaK,eAC9DX,EAAcC,eAAYW,kBAAkBJ,GAClD,EAAKnR,SAAS,CACZ2Q,kB,EAKNa,QAAU,WAAO,IACRb,EAAe,EAAKhX,MAApBgX,YAEP,OAAOc,KAAYC,wBAAaf,EAAYgB,uB,uDAGpC,IACDhB,EAAexV,KAAKxB,MAApBgX,YACP,OACE,6BACE,kBAAC,UAAD,CACEA,YAAaA,EAGbiB,YAAa,CACXC,OAAO,mBACPC,YAAY,OACZpF,WAAY,OACZqF,UAAW,SAGbjB,oBAAqB3V,KAAK2V,2B,GA5CIrU,cCAjCmJ,I,QAAUC,KAAVD,QA6MQoM,GA1MdtY,aACG,SAAAC,GAAK,MAAK,CAACxE,YAAawE,EAAMxE,eAC9B,G,gNAIAwE,MAAQ,CACJsY,aAAc,GACd5d,KAAM,MACNoE,KAAM,GACN0V,KAAM,GACNtH,MAAO,GACPjP,WAAY,GACZyW,KAAM,GACND,OAAQ,I,EA8BZlL,gB,sBAAkB,4BAAAjJ,EAAA,sEACK1C,IADL,OAEO,KADjB2C,EADU,QAEJpD,OACN,EAAKkJ,SAAS,CAACiS,aAAa/X,EAAO5F,OAEnCyC,IAAQN,MAAM,6EAAkB,GALtB,2C,EASlByb,e,uCAAiB,WAAMjK,GAAN,eAAAhO,EAAA,sEACM3B,EAAiB2P,GADvB,OAEQ,KADjB/N,EADS,QAEHpD,OACN,EAAKqb,sBAAsBjY,EAAO5F,MAElCyC,IAAQN,MAAM,yFAAoB,GALzB,2C,wDASjB0b,sBAAwB,SAAA7d,GAAS,IACtBsD,EAA+CtD,EAA/CsD,WAAYuW,EAAmC7Z,EAAnC6Z,KAAMC,EAA6B9Z,EAA7B8Z,OAAQC,EAAqB/Z,EAArB+Z,KAAM5V,EAAenE,EAAfmE,KAAMoO,EAASvS,EAATuS,MAC7C,EAAK7G,SAAS,CAACvH,OAAM0V,OAAMtH,QAAOjP,aAAYwW,SAAQC,U,EAG1D+D,SAAW3B,IAAM4B,Y,EACjBnO,QAAUuM,IAAM4B,Y,EAEhBtY,S,uCAAW,WAAMS,GAAN,uBAAAP,EAAA,yDACA5F,EAAQ,EAAKsF,MAAbtF,KACDyP,EAAM,EAAK1J,MAAM8T,MAAMlW,OAAOiQ,GAChCoG,EAAO,EAAK+D,SAASnM,QAAQgK,eAC7B7B,EAAS,EAAKkE,QAAQd,UAEd,QAATnd,EANI,iCAOYqE,GAAc,2BAAI8B,GAAL,IAAa6T,OAAMD,YAP5C,OAQkB,KADrBlU,EAPG,QAQOpD,QACNC,IAAQoP,QAAQ,4BAAS,GACzB,EAAK/L,MAAMC,QAAQoD,QAAQ,8BAE3B1G,IAAQN,MAAMyD,EAAOC,IAAM,IAAK,GAZjC,yCAeYvB,GAAiB,2BAAI4B,GAAL,IAAa6T,OAAMD,SAAQtK,SAfvD,QAgBkB,KADrB5J,EAfG,QAgBOpD,QACNC,IAAQoP,QAAQ,4BAAS,GAEzB,EAAK/L,MAAMC,QAAQoD,QAAQ,8BAE3B1G,IAAQC,QAAQ,kEAAiB,GArBlC,4C,wHArDQ,IAERiR,EAAM9M,KAAKf,MAAM8T,MAAMlW,OAAvBiQ,GACP,GAAGA,EAAG,CACF9M,KAAK6E,SAAS,CAAC3L,KAAM,WADnB,IAGKc,EAAegG,KAAKf,MAApBjF,YACP,GAAGA,EAAY,CACX,IAAI+E,EAAS/E,EAAY4K,MAAK,SAACF,GAAD,OAAWA,EAAKiE,MAAQmE,KACtD9M,KAAKgX,sBAAsBjY,QAE3BiB,KAAK+W,eAAejK,GAG5B9M,KAAK+H,oB,2CAEY,IAAD,EAC4C/H,KAAKxB,MAA1DlB,EADS,EACTA,KAAM0V,EADG,EACHA,KAAMtH,EADH,EACGA,MAAOjP,EADV,EACUA,WAAYyW,EADtB,EACsBA,KAAMD,EAD5B,EAC4BA,OAAQ/Z,EADpC,EACoCA,KAChD8G,KAAK+I,QAAQ+B,SACD,QAAT5R,IACC8G,KAAK+I,QAAQ+B,QAAQxB,eAAe,CAAChM,OAAM0V,OAAMtH,QAAOjP,eACxDuD,KAAKiX,SAASnM,QAAQwJ,YAAYpB,GAClClT,KAAKmX,QAAQvB,QAAQ3C,M,+BAwDvB,IAAD,SACwBjT,KAAKxB,MAA3BsY,EADF,EACEA,aAAc5d,EADhB,EACgBA,KACrB,OACI,kBAAC,KAAD,CAAMa,MAAO,kBAAC,IAAD,CAAQb,KAAK,OAAOgH,UAAU,UAAU8G,QAAS,WAAO,EAAK/H,MAAMC,QAAQiU,WAAW,kBAACC,GAAA,EAAD,CAAoBlT,UAAU,cAAuB,QAAThH,EAAiB,2BAAS,6BACrK,kBAAC,IAAD,CACI+T,SAAU,CAACmK,GAAI,EAAGjK,GAAI,EAAGkK,GAAI,EAAGnK,GAAI,IACpCoK,WAAY,CAACF,GAAI,EAAGjK,GAAI,GAAIkK,GAAI,GAAInK,GAAI,IACxC5P,KAAK,eACL4C,UAAU,aAEVI,cAAe,CAACC,UAAU,GAE1B3B,SAAUoB,KAAKpB,SACfQ,eAAgBY,KAAKZ,eACrB2K,IAAK/J,KAAK+I,SAEV,kBAAC,IAAKvI,KAAN,CACI6M,MAAM,2BACN/P,KAAK,OACLmD,MAAO,CACH,CACIC,UAAU,EACV9E,QAAS,uDAIjB,kBAAC,IAAD,CAEIsF,YAAY,8BAGpB,kBAAC,IAAKV,KAAN,CACI6M,MAAM,2BACN/P,KAAK,OACLmD,MAAO,CACH,CACIC,UAAU,EACV9E,QAAS,uDAIjB,kBAAC,IAAD,CAEIsF,YAAY,8BAGpB,kBAAC,IAAKV,KAAN,CACI6M,MAAM,2BACN/P,KAAK,QACLmD,MAAO,CACH,CACIC,UAAU,EACV9E,QAAS,uDAIjB,kBAAC,IAAD,CACIoF,OAAO,SACPuW,WAAW,SACXre,KAAK,SACLgI,YAAY,8BAGpB,kBAAC,IAAKV,KAAN,CACI6M,MAAM,2BACN/P,KAAK,aACLmD,MAAO,CACH,CACIC,UAAU,EACV9E,QAAS,gDAIjB,kBAAC,KAAD,CAAQsF,YAAY,8CAEZ4V,EAAa9O,KAAI,SAACtD,GAAD,OAAW,kBAAC,GAAD,CAAQhG,MAAOgG,EAAKiE,IAAKhG,IAAK+B,EAAKiE,KAAMjE,EAAKpH,WAItF,kBAAC,IAAKkD,KAAN,CACI6M,MAAM,2BACN/P,KAAK,OACLga,WAAY,CAACF,GAAI,GAAIjK,GAAI,GAAIkK,GAAI,EAAGnK,GAAI,IAExC,kBAAC,GAAD,CAAcnD,IAAK/J,KAAKiX,YAE5B,kBAAC,IAAKzW,KAAN,CACI6M,MAAM,2BACN/P,KAAK,SACLga,WAAY,CAACF,GAAI,GAAIjK,GAAI,GAAIkK,GAAI,EAAGnK,GAAI,IAExC,kBAAC,GAAD,CAAYnD,IAAK,SAACmF,GAAU,EAAKiI,QAAUjI,MAG/C,kBAAC,IAAK1O,KAAN,CAAW6M,MAEH,kBAAC,IAAD,CAAQnU,KAAK,UAAUmI,SAAS,SAASnB,UAAU,oBAAoB6G,KAAK,SAA5E,gBAEJ7G,UAAU,mB,GA7LHoB,e,GCGvBkW,I,QAA2BC,KAA3BD,QAAQE,GAAmBD,KAAnBC,MAAOC,GAAYF,KAAZE,QA4CRC,GA3CdrZ,aACG,SAAAC,GAAK,MAAK,CAAC5E,SAAU4E,EAAM5E,YAC3B,G,2KAOI,OADkBoG,KAAKf,MAAMrF,SAAtBF,QAGC,kBAAC,KAAD,CAAQwG,UAAU,SACd,kBAACwX,GAAD,CAAOxX,UAAU,SACb,kBAAC,GAAD,OAEJ,kBAAC,KAAD,KACI,kBAAC,GAAD,MACA,kBAACyX,GAAD,CAASzX,UAAU,WACf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO4C,KAAK,cAAc+U,UAAW1Q,KACrC,kBAAC,IAAD,CAAOrE,KAAK,6BAA6B+U,UAAWpQ,KACpD,kBAAC,IAAD,CAAO3E,KAAK,uCAAuC+U,UAAWlF,KAC9D,kBAAC,IAAD,CAAO7P,KAAK,2CAA2C+U,UAAWhB,KAClE,kBAAC,IAAD,CAAO/T,KAAK,uCAAuC+U,UAAWhB,KAC9D,kBAAC,IAAD,CAAO/T,KAAK,4BAA4B+U,UAAWlN,KACnD,kBAAC,IAAD,CAAO7H,KAAK,cAAc+U,UAAW3L,KACrC,kBAAC,IAAD,CAAOpJ,KAAK,cAAc+U,UAAWtK,KACrC,kBAAC,IAAD,CAAOzK,KAAK,oBAAoB+U,UAAW7I,KAC3C,kBAAC,IAAD,CAAOlM,KAAK,qBAAqB+U,UAAWvH,KAC5C,kBAAC,IAAD,CAAOxN,KAAK,oBAAoB+U,UAAWrH,KAC3C,kBAAC,IAAD,CAAUvQ,GAAG,kBAGrB,kBAACuX,GAAD,CAAQtX,UAAU,UAAlB,8HAKL,kBAAC,IAAD,CAAUD,GAAG,e,GAhCZqB,e,GCnBCwW,I,+KAEjB,OACE,yBAAK5X,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4C,KAAK,SAAS+U,UAAWvZ,KAChC,kBAAC,IAAD,CAAOwE,KAAK,SAAS+U,UAAWD,KAChC,kBAAC,IAAD,CAAU3X,GAAG,iB,GAPUqB,cCCjCyW,IAASpO,OACT,kBAAC,IAAD,CAAU3O,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,GAAD,QAGNgd,SAASC,eAAe,U,oBCb1BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.156922ec.chunk.js","sourcesContent":["import {CREATE_USER_INFO, DELETE_USER_INFO} from '../action_types.js';\r\n\r\nexport const createUserInfoAction = value => {\r\n    // 本地存储localstorage.setItem(key, value);\r\n    localStorage.setItem('user', JSON.stringify(value.user));\r\n    localStorage.setItem('token', value.token);\r\n    return {type: CREATE_USER_INFO, data: value};\r\n};\r\n\r\nexport const deleteUserInfoAction = () => {\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    return {type: DELETE_USER_INFO, data: {}};\r\n}","// 此文件用于保存type\r\nexport const CREATE_USER_INFO = 'create_user_info';\r\nexport const DELETE_USER_INFO = 'delete_user_info';\r\nexport const SAVE_TITLE = 'save_title';\r\nexport const SAVE_PRODUCT_LIST = 'save_product_list';","import {CREATE_USER_INFO, DELETE_USER_INFO} from '../action_types.js';\r\n// 在localstorage中读值\r\nlet user = JSON.parse(localStorage.getItem('user'));\r\nlet token = localStorage.getItem('token');\r\nlet initState = {\r\n    user: user || '',\r\n    isLogin: user && token ? true : false,\r\n    token: token || ''\r\n}\r\nexport default function(previousState = initState, action){\r\n    let {type, data} = action;\r\n    let newState;\r\n    switch (type) {\r\n        case CREATE_USER_INFO:\r\n            newState = {\r\n                user: data.user,\r\n                token: data.token,\r\n                isLogin: true\r\n            }\r\n            return newState;\r\n        case DELETE_USER_INFO:\r\n            newState = {\r\n                user: null,\r\n                token: '',\r\n                isLogin: false\r\n            }\r\n            return newState;\r\n        default:\r\n            return previousState;\r\n    } \r\n}","// 此文件用于汇总多个reducer交给stroe\r\nimport {combineReducers} from 'redux';\r\nimport createUserInfoReducer from './create_or_delete_user_info_reducer.js';\r\nimport createSaveTitleReducer from './create_save_title_reducer.js';\r\nimport createSaveProductReducer from './create_save_product_list_reducer.js';\r\n\r\nexport default combineReducers({\r\n    userInfo: createUserInfoReducer,\r\n    title: createSaveTitleReducer,\r\n    productList: createSaveProductReducer\r\n})\r\n","import {SAVE_TITLE} from '../action_types.js';\r\nexport default function(previousState = '', action){\r\n    let {type, data} = action;\r\n    let newState;\r\n    switch (type) {\r\n        case SAVE_TITLE:\r\n            newState = data;\r\n            return newState;\r\n        default:\r\n            return previousState;\r\n    } \r\n}","import {SAVE_PRODUCT_LIST} from '../action_types.js';\r\nexport default function(previousState = null, action){\r\n    let {type, data} = action;\r\n    let newState;\r\n    switch (type) {\r\n        case SAVE_PRODUCT_LIST:\r\n            newState = data;\r\n            return newState;\r\n        default:\r\n            return previousState;\r\n    } \r\n}","import {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers/index.js';\r\n\r\nexport default createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));","import axios from 'axios';\r\nimport qs from 'querystring';\r\nimport {message} from 'antd';\r\nimport NProgress from 'nprogress';\r\nimport store from '../redux/store.js';\r\nimport {deleteUserInfoAction} from '../redux/actions/create_or_delete_user_info_action.js';\r\nimport 'nprogress/nprogress.css';\r\n\r\n// 配置axios 请求/响应拦截器 超时\r\nconst myAxios = axios.create({\r\n    // 超过4秒，请求超时\r\n    timeout: 4000\r\n});\r\n\r\n\r\n// 请求拦截器\r\nmyAxios.interceptors.request.use(function (config) {\r\n    // 进度条开始\r\n    NProgress.start();\r\n    // 如果有token 设置config的headers中的Authorization在redux中的token\r\n    // console.log(config);\r\n    // console.log(store.getState().userInfo.token);\r\n    if(store.getState().userInfo.token){\r\n        config.headers.Authorization = 'progect_' + store.getState().userInfo.token;\r\n    }\r\n    /**\r\n     * config: \r\n     * {url: \"http://localhost:3000/login\", method: \"post\", data: \"{\"username\":\"admin\",\"password\":\"admin\"}\", headers: {…}, transformRequest: Array(1), …}\r\n        data: {status: 1, msg: \"用户名或密码不正确!\"}\r\n        headers: {connection: \"close\", content-length: \"49\", content-type: \"application/json; charset=utf-8\", date: \"Mon, 05 Oct 2020 03:17:59 GMT\", etag: \"W/\"31-cZyBaqc2kc89LjgTCRgjuE4wnH0\"\", …}\r\n        request: XMLHttpRequest {readyState: 4, timeout: 4000, withCredentials: false, upload: XMLHttpRequestUpload, onreadystatechange: ƒ, …}\r\n        status: 200\r\n        statusText: \"OK\"\r\n     */\r\n    // 服务器无法处理json数据参数 处理\r\n    config.data = qs.stringify(config.data)\r\n    return config;\r\n}, function (error) {\r\n    // console.log(error);\r\n    return Promise.reject(error);\r\n});\r\n\r\n// 响应拦截器\r\nmyAxios.interceptors.response.use(function (response) {\r\n    // console.log(response);\r\n    // 进度条结束\r\n    NProgress.done();\r\n    /**\r\n     *  response: \r\n     * config: {url: \"http://localhost:3000/login\", method: \"post\", data: \"username=admin&password=admin\", headers: {…}, transformRequest: Array(1), …}\r\n        data:\r\n            {data: {user: {…}, token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmN…DY4fQ.4QQA17VLfNDFOa3ZZqKsFcBzkjQBXDl5ID_YV7k2FBY\"}\r\n            status: 0\r\n            __proto__: Object}\r\n        headers: {connection: \"close\", content-length: \"312\", content-type: \"application/json; charset=utf-8\", date: \"Mon, 05 Oct 2020 03:24:28 GMT\", etag: \"W/\"138-mjgsOGWXTEjQ2fERTS//uQlc9p8\"\", …}\r\n        request: XMLHttpRequest {readyState: 4, timeout: 4000, withCredentials: false, upload: XMLHttpRequestUpload, onreadystatechange: ƒ, …}\r\n        status: 200\r\n        statusText: \"OK\"\r\n     */\r\n    return response.data;\r\n}, function (error) {\r\n    // 进度条结束\r\n    NProgress.done();\r\n    if(error.response.status === 401){\r\n        message.warning('身份校验失败，请重新登录！', 1);\r\n        // 清空redux中的状态\r\n        store.dispatch(deleteUserInfoAction());\r\n\r\n    }else{\r\n        message.error(error.message);\r\n    }\r\n    // debugger;\r\n    // console.log(error);\r\n    // 失败中断promise链\r\n    return new Promise(() => {})\r\n});\r\n\r\n\r\nexport default myAxios;","/**\r\n * 通用配置文件\r\n */\r\n\r\nexport const BASE_URL = 'http://localhost:5000';\r\n// 商品分类分页器条数\r\nexport const PAGE_SIZE = 8;\r\n// 商品分页器条数\r\nexport const PRODUCT_SIZE = 5;","// 此文件将发送请求\r\nimport axios from 'axios';\r\nimport jsonp from 'jsonp';\r\nimport myAxios from './myAxios.js';\r\nimport {BASE_URL} from '../config/index.js';\r\n// 登录\r\nexport const reqLogin = (username, password) => myAxios.post(`${BASE_URL}/login`, {username, password});\r\n// 位置 jsonp\r\nexport const reqLocal = () => {\r\n    return new Promise((resolve, reject) => {\r\n        jsonp('http://whois.pconline.com.cn/ipJson.jsp?jsonp=true', (err, data) => {\r\n            if(err){\r\n                reject('位置接口错误!');\r\n            }else{\r\n                resolve(data.city);\r\n            }\r\n        })\r\n    })\r\n};\r\n// 天气\r\nexport const reqWeather = (place) => axios.get(`http://wthrcdn.etouch.cn/weather_mini?city=${place}`);\r\n// 分类列表\r\nexport const reqCategoryList = () => myAxios.get(`${BASE_URL}/manage/category/list`);\r\n// 添加分类\r\nexport const reqAddCategory = (categoryName) => myAxios.post(`${BASE_URL}/manage/category/add`, {categoryName});\r\n// 修改分类\r\nexport const reqUpdateCategory = (categoryId, categoryName) => myAxios.post(`${BASE_URL}/manage/category/update`, {categoryId, categoryName});\r\n// 获取商品\r\nexport const reqProductList = (pageNum, pageSize) => myAxios.get(`${BASE_URL}/manage/product/list`, {params:{pageNum, pageSize}});\r\n// 更新商品状态上架，下架 status是要更新的状态\r\nexport const reqUpdateProductState = (productId, status) => myAxios.post(`${BASE_URL}/manage/product/updateStatus`, {productId, status});\r\n// 搜索特定商品列表\r\nexport const reqSearchProductList = (pageNum,pageSize,searchType,keyWord) => myAxios.get(`${BASE_URL}/manage/product/search`, {params:{pageNum, pageSize, [searchType]:keyWord}});\r\n// 根据商品id获取商品详细\r\nexport const reqProductDetail = (productId) => myAxios.get(`${BASE_URL}/manage/product/info`, {params:{productId}});\r\n// 根据分类id获取商品分类\r\nexport const reqProductCategory = (categoryId) => myAxios.get(`${BASE_URL}/manage/category/info`, {params:{categoryId}});\r\n// 删除图片\r\nexport const reqRemovePhoto = (name) => myAxios.post(`${BASE_URL}/manage/img/delete`, {name});\r\n// 添加商品\r\nexport const reqAddProduct = (obj) => myAxios.post(`${BASE_URL}/manage/product/add`, {...obj});\r\n// 请求修改商品\r\nexport const reqUpdateProduct = (obj) => myAxios.post(`${BASE_URL}/manage/product/update`, {...obj});\r\n// 请求添加角色\r\nexport const reqAddRole = (roleName) => myAxios.post(`${BASE_URL}/manage/role/add`, {roleName});\r\n// 请求角色列表\r\nexport const reqRoleList = () => myAxios.get(`${BASE_URL}/manage/role/list`);\r\n// 请求授予权限\r\nexport const reqAuthRole = (obj) => myAxios.post(`${BASE_URL}/manage/role/update`, {...obj, auth_time: Date.now()});\r\n// 请求用户列表\r\nexport const reqUserList = () => myAxios.get(`${BASE_URL}/manage/user/list`);\r\n// 添加一个用户\r\nexport const reqAddUser = (obj) => myAxios.post(`${BASE_URL}/manage/user/add`, {...obj});\r\n// 请求修改一个用户\r\nexport const reqUpdateUser = (obj) => myAxios.post(`${BASE_URL}/manage/user/update`, {...obj});\r\n// 请求删除一个用户\r\nexport const reqDeleteUser = (userId) => myAxios.post(`${BASE_URL}/manage/user/delete`, {userId});","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom'\r\nimport { Form, Input, Button, message} from 'antd';\r\n// 引入icon图标\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {createUserInfoAction} from '../../redux/actions/create_or_delete_user_info_action.js';\r\nimport {reqLogin} from '../../api/index.js'\r\nimport logo from '../../static/imgs/logo.png';\r\nimport './css/login.less';\r\n\r\n\r\n@connect(\r\n    state => ({userInfo: state.userInfo}),\r\n    {\r\n        createUserInfo: createUserInfoAction\r\n    }\r\n)\r\nclass Login extends Component{\r\n    onFinish = async (userInformation) => {\r\n        // console.log(userInformation);\r\n        // userInformation = {username: \"133344\", password: \"222222222222\"}\r\n        // 成功发请求\r\n        const {username, password} = userInformation;\r\n        let result = await reqLogin(username, password);\r\n        // console.log(result);\r\n        /**\r\n         * data:\r\n                {token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmNzcxNWMwNzI4YzM1MDcwYzYwNDAwMyIsImlhdCI6MTYwMTg3MjczMCwiZXhwIjoxNjAyNDc3NTMwfQ.V2Izfej62ZifqJIbsaH9tKLwlqCgueSd2BsH_WLt_Xk\"\r\n                user:\r\n                    {create_time: 1601639872615\r\n                    role: {menus: Array(0)}\r\n                    username: \"admin\"\r\n                    _id: \"5f7715c0728c35070c604003\"}\r\n                }\r\n         */\r\n        if(result.status === 1){\r\n            message.warning(result.msg, 1);\r\n        }else{\r\n            // 将userInformation放入redux进行管理\r\n            this.props.createUserInfo(result.data)\r\n            // 跳转admin\r\n            this.props.history.push('/admin');\r\n        }\r\n    }\r\n\r\n    // 失败的回调\r\n    onFinishFailed = ({ values, errorFields, outOfDate }) => {\r\n        // console.log(values, errorFields, outOfDate);\r\n        errorFields.forEach(element => {\r\n            message.warning(element.errors, 1);\r\n        });\r\n    }\r\n    // 自定义校验规则\r\n    pwdValidator = (rule, value, callback) => {\r\n        /*\r\n        密码合法性\r\n            1. 必须输入 \r\n            2. 必须大于等于5位\r\n            3. 必须小于等于18位\r\n            4. 必须是字母、数字、下划线组成\r\n        */\r\n        // console.log(rule, value, callback);\r\n        if(!value){\r\n            callback('密码不能为空!');\r\n        }else if(value.length < 5){\r\n            callback('密码必须大于等于5位!');\r\n        }else if(value.length > 18){\r\n            callback('密码必须小于等于18位!');\r\n        }else if(!(/^\\w+$/).test(value)){\r\n            callback('密码必须由字母数字下划线组成!');\r\n        }\r\n        callback();\r\n    }\r\n    render(){\r\n        // 读取store管理的isLogin\r\n        const {isLogin} = this.props.userInfo;\r\n        if(isLogin){\r\n            return <Redirect to=\"/admin\"/>\r\n        }else{\r\n            return (\r\n                <div className=\"login\">\r\n                    <header>\r\n                        <img src={logo} alt=\"logo\"/>\r\n                        <h1>商品管理系统</h1>\r\n                    </header>\r\n                    <section>\r\n                        <h1>用户登录</h1>\r\n                        <Form \r\n                            name=\"normal_login\" \r\n                            className=\"login-form\" \r\n                            // 表单默认值，只有初始化以及重置时生效 obj\r\n                            initialValues={{ remember: true }}\r\n                            // 提交表单成功的回调\r\n                            onFinish={this.onFinish}\r\n                            onFinishFailed={this.onFinishFailed}\r\n                        >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            /*\r\n                            用户名合法性\r\n                                1. 必须输入 \r\n                                2. 必须大于等于4位\r\n                                3. 必须小于等于12位\r\n                                4. 必须是字母、数字、下划线组成\r\n                            */\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '用户名不能为空!',\r\n                                },\r\n                                {\r\n                                    min: 4,\r\n                                    message: '用户名必须大于等于4位!'\r\n                                },\r\n                                {\r\n                                    max: 12,\r\n                                    message: '用户名必须小于等于12位!'\r\n                                },\r\n                                {\r\n                                    pattern: /^\\w+$/,\r\n                                    message: '用户名必须由字母数字下划线组成!'\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input \r\n                                style={{color: 'rgba(0, 0, 0, .25)'}}\r\n                                prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" \r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    // 自定义校验器\r\n                                    validator: this.pwdValidator\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                style={{color: 'rgba(0, 0, 0, .25)'}}\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </Form.Item>\r\n    \r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            登录\r\n                            </Button>\r\n                        </Form.Item>\r\n                        </Form>\r\n                    </section>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Login;","export function dateFormat(fmt, date) {\r\n    let ret;\r\n    const opt = {\r\n        \"Y+\": date.getFullYear().toString(),        // 年\r\n        \"m+\": (date.getMonth() + 1).toString(),     // 月\r\n        \"d+\": date.getDate().toString(),            // 日\r\n        \"H+\": date.getHours().toString(),           // 时\r\n        \"M+\": date.getMinutes().toString(),         // 分\r\n        \"S+\": date.getSeconds().toString()          // 秒\r\n    };\r\n    for (let k in opt) {\r\n        ret = new RegExp(\"(\" + k + \")\").exec(fmt);\r\n        if (ret) {\r\n            // padStart头部补全 YYYY\r\n            fmt = fmt.replace(ret[1], (ret[1].length === 1) ? (opt[k]) : (opt[k].padStart(ret[1].length, \"0\")))\r\n        };\r\n    };\r\n    return fmt;\r\n}","// 多云 晴 小雨 中雨 大雨 阴 雷阵雨 阵雨\r\nlet urls = [\r\n    'http://api.map.baidu.com/images/weather/day/duoyun.png', \r\n    'http://api.map.baidu.com/images/weather/day/qing.png', \r\n    'http://api.map.baidu.com/images/weather/day/xiaoyu.png',\r\n    'http://api.map.baidu.com/images/weather/day/zhongyu.png',\r\n    'http://api.map.baidu.com/images/weather/day/dayu.png',\r\n    'http://api.map.baidu.com/images/weather/day/yin.png',\r\n    'http://api.map.baidu.com/images/weather/day/leizhenyu.png',\r\n    'http://api.map.baidu.com/images/weather/day/zhenyu.png',\r\n    'http://api.map.baidu.com/images/weather/day/xiaoxue.png',\r\n    'http://api.map.baidu.com/images/weather/day/zhongxue.png',\r\n    'http://api.map.baidu.com/images/weather/day/daxue.png',\r\n    'http://api.map.baidu.com/images/weather/day/baoyu.png',\r\n    'http://api.map.baidu.com/images/weather/day/dabaoyu.png',\r\n    'http://api.map.baidu.com/images/weather/day/mai.png',\r\n    'http://api.map.baidu.com/images/weather/day/wu.png'\r\n];\r\n\r\n\r\nexport function imgUrl(type){\r\n    switch (type) {\r\n        case '多云':\r\n            return urls[0];\r\n        case '晴':\r\n            return urls[1];\r\n        case '小雨':\r\n            return urls[2];\r\n        case '中雨':\r\n            return urls[3];\r\n        case '大雨':\r\n            return urls[4];\r\n        case '阴':\r\n            return urls[5];    \r\n        case '雷阵雨':\r\n            return urls[6]; \r\n        case '阵雨':\r\n            return urls[7];\r\n        case '小雪':\r\n            return urls[8];\r\n        case '中雪':\r\n            return urls[9];\r\n        case '大雪':\r\n            return urls[10];\r\n        case '暴雨':\r\n            return urls[11];\r\n        case '大暴雨':\r\n            return urls[12];\r\n        case '霾':\r\n            return urls[13];\r\n        case '雾':\r\n            return urls[14];\r\n        default:\r\n            return urls[1];\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n\r\n\r\nlet xAxisData = [];\r\nlet data1 = [];\r\nlet data2 = [];\r\nfor (var i = 1; i < 31; i++) {\r\n    xAxisData.push(i + '日');\r\n    data1.push((Math.random() * 20));\r\n    data2.push((Math.random() * 100) - 50);\r\n}\r\n\r\n\r\nexport default class Bar extends Component{\r\n\r\n    getOption = () => {\r\n        return {\r\n            title: {\r\n                text: ''\r\n            },\r\n            legend: {\r\n                data: ['销量', '利润']\r\n            },\r\n            toolbox: {\r\n                // y: 'bottom',\r\n                feature: {\r\n                    magicType: {\r\n                        type: ['stack', 'tiled']\r\n                    },\r\n                    dataView: {},\r\n                    saveAsImage: {\r\n                        pixelRatio: 2\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {},\r\n            xAxis: {\r\n                data: xAxisData,\r\n                splitLine: {\r\n                    show: false\r\n                }\r\n            },\r\n            yAxis: {\r\n            },\r\n            series: [{\r\n                name: '销量',\r\n                type: 'bar',\r\n                data: data1,\r\n                animationDelay: function (idx) {\r\n                    return idx * 10;\r\n                }\r\n            }, {\r\n                name: '利润',\r\n                type: 'bar',\r\n                data: data2,\r\n                animationDelay: function (idx) {\r\n                    return idx * 10 + 100;\r\n                }\r\n            }],\r\n            animationEasing: 'elasticOut',\r\n            animationDelayUpdate: function (idx) {\r\n                return idx * 5;\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <ReactEcharts option={this.getOption()} style={{width: '100%', height: '100%'}}/>\r\n        )\r\n    }\r\n}","import {\r\n  HomeOutlined,\r\n  AccountBookOutlined,\r\n  BarsOutlined,\r\n  ShoppingOutlined,\r\n  UserOutlined,\r\n  ContactsOutlined,\r\n  AreaChartOutlined,\r\n  BarChartOutlined,\r\n  LineChartOutlined,\r\n  PieChartOutlined\r\n} from '@ant-design/icons';\r\n/* \r\n左侧Menu导航的数据配置\r\n*/\r\n// 根据menuList生成<Item>和<SubMenu>组件的数组\r\nconst menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: 'home', // 对应的path\r\n    icon: HomeOutlined, // 图标名称<HomeOutlined />\r\n    path: '/admin/home',\r\n    isPublic: true // 不需要进行权限检查\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: 'production',\r\n    icon: AccountBookOutlined,\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '分类管理',\r\n        key: 'category',\r\n        path: '/admin/production/category',\r\n        icon: BarsOutlined\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: 'product',\r\n        path: '/admin/production/product',\r\n        icon: ShoppingOutlined\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: 'user',\r\n    icon: UserOutlined,\r\n    path: '/admin/user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: 'role',\r\n    icon: ContactsOutlined,\r\n    path: '/admin/role'\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: 'charts',\r\n    icon: AreaChartOutlined,\r\n    children: [\r\n      {\r\n        title: '柱状图',\r\n        key: 'bar',\r\n        icon: BarChartOutlined,\r\n        path: '/admin/charts/bar'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: 'line',\r\n        icon: LineChartOutlined,\r\n        path: '/admin/charts/line'\r\n      },\r\n      {\r\n        title: '饼状图',\r\n        key: 'pie',\r\n        icon: PieChartOutlined,\r\n        path: '/admin/charts/pie'\r\n      },\r\n    ]\r\n  },\r\n]\r\n\r\nexport default menuList","import React,{Component} from 'react';\r\nimport {Button, message, Modal} from 'antd';\r\nimport {FullscreenOutlined, FullscreenExitOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport {connect} from 'react-redux';\r\nimport screenfull from 'screenfull';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {deleteUserInfoAction} from '../../../redux/actions/create_or_delete_user_info_action.js';\r\nimport {dateFormat} from '../../../myFunction/time_format.js';\r\nimport {imgUrl} from '../../../myFunction/accord_weather_to_img';\r\nimport {reqLocal, reqWeather} from '../../../api/index.js';\r\nimport menuList from '../../../config/menu-config.js';\r\nimport './css/header.less';\r\n\r\nconst { confirm } = Modal;\r\n\r\n@connect(\r\n    state => ({\r\n        userInfo: state.userInfo,\r\n        title: state.title\r\n    }),\r\n    {\r\n        deleteUserInfo: deleteUserInfoAction\r\n    }\r\n)\r\n@withRouter\r\nclass Header extends Component{\r\n    state = {\r\n        isFullScreen: false, // 是否全屏\r\n        time: dateFormat(\"YYYY-mm-dd HH:MM:SS\", new Date()), // 时间格式化\r\n        local: '', // 位置\r\n        weatherUrl: '', // 天气图片url\r\n        weatherType: '', // 天气类型\r\n        temperature: '', // 温度状况\r\n        title: '' // 标题\r\n    }\r\n\r\n    timerId = 0;\r\n\r\n    componentDidMount(){\r\n        // 发请求获取位置\r\n        reqLocal()\r\n            .then(result => {\r\n                this.setState({local: result});\r\n                // 发请求获取天气\r\n                let placeReg = /(\\S+)市$/;\r\n                let place = placeReg.exec(result)[1];\r\n                reqWeather(place)\r\n                    .then(result => {\r\n                        let {type, low, high} = result.data.data.forecast[0];\r\n                        let temperatureReg = /(\\d+℃)$/;\r\n                        low = parseInt(temperatureReg.exec(low)[1]);\r\n                        high = temperatureReg.exec(high)[1];\r\n                        this.setState({weatherUrl: imgUrl(type), weatherType: type, temperature: low + '~' + high});\r\n                        // console.log(result.data.data.forecast[0])\r\n                    })\r\n                    .catch(reason => console.log(reason));\r\n            })\r\n            .catch(reason => message.error(reason, 1));\r\n        // 绑定监听\r\n        screenfull.on('change', this.changeFullState);\r\n        // 修改状态\r\n        this.timerId = setInterval(() => {\r\n            let time = dateFormat(\"YYYY-mm-dd HH:MM:SS\", new Date());\r\n            this.setState({time});\r\n        }, 1000);\r\n\r\n        this.getTitle();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        // 解除监听\r\n        screenfull.off('change', this.changeFullState);\r\n        // 清除定时器\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    // 获取标题\r\n    getTitle = () => {\r\n        let key = this.props.location.pathname.split('/');\r\n        if(key.indexOf('product') !== -1) key = 'product';\r\n        else key = key[key.length - 1];\r\n        menuList.forEach((item) => {\r\n            if(!item.children){\r\n                if(item.key === key) this.setState({title: item.title})\r\n            }else{\r\n                let temp = item.children.find((children) => {\r\n                    return children.key === key;\r\n                })\r\n\r\n                if(temp) this.setState({title: temp.title})\r\n            }\r\n        })\r\n        \r\n    }\r\n    // 改变全屏状态\r\n    changeFullState = () => {\r\n        let isFullScreen = !this.state.isFullScreen;\r\n        this.setState({isFullScreen})\r\n    }\r\n    // 退出登录\r\n    loginOut = () => {\r\n        confirm({\r\n            title: '您确定要退出登录吗?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '若退出需要重新登录!',\r\n            okText: '确认',\r\n            okType: 'danger',\r\n            cancelText: '取消',\r\n            onOk: () => {\r\n                this.props.deleteUserInfo();\r\n            },\r\n            onCancel() {\r\n              message.loading('取消', 0.5);\r\n            },\r\n          });\r\n        \r\n    }\r\n\r\n    // 进度条\r\n    inOrOutFullScreen = () => {\r\n        screenfull.toggle();\r\n    }\r\n    render(){\r\n        const {username} = this.props.userInfo.user;\r\n        const {isFullScreen, time, local, weatherUrl, weatherType, temperature} = this.state;\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-top\">\r\n                    <Button size=\"small\" className=\"isfullscreen\" onClick={this.inOrOutFullScreen}>\r\n                        {\r\n                            isFullScreen ? <FullscreenExitOutlined/> : <FullscreenOutlined/>\r\n                        }\r\n                    </Button>\r\n                    <span>欢迎，{username}</span>\r\n                    <Button type=\"link\" onClick={this.loginOut}>退出</Button>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <section className=\"header-bottom-left\">{this.props.title || this.state.title}</section>\r\n                    <div className=\"header-bottom-right\">\r\n                        <span>{time}</span>\r\n                        <span className=\"local\">{local}</span>\r\n                        <img src={weatherUrl} alt=\"天气\"/>\r\n                        <span className=\"weather\">{weatherType}</span>\r\n                        <span>{temperature}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport { Carousel } from 'antd';\r\nimport '../css/home.less';\r\n\r\nexport default class Home extends Component{\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div> \r\n                <Carousel className=\"autoplay\" autoplay>\r\n                    <div>\r\n                        <h2 className=\"autoplay\">欢迎使用商品管理系统</h2>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className=\"autoplay\">欢迎使用商品管理系统</h2>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className=\"autoplay\">欢迎使用商品管理系统</h2>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className=\"autoplay\">欢迎使用商品管理系统</h2>\r\n                    </div>\r\n                </Carousel>\r\n          </div>\r\n        )\r\n    }\r\n}","// 存储标签的颜色 个数 商品形容词\r\nexport const colorType = [\"magenta\", \"red\", \"volcano\", \"orange\", \"gold\", \"lime\", \"green\", \"cyan\", \"blue\", \"geekblue\", \"purple\"];\r\nexport const colorCount = colorType.length;\r\nexport const adjective = ['nice', 'popular', 'valuable', 'cool', 'beautiful'];\r\nexport const adjectiveCount = adjective.length;","import React, {Component} from 'react';\r\nimport {Modal ,Table, Tag, Card, Button, Input, Form, message} from 'antd';\r\nimport {PlusCircleOutlined} from '@ant-design/icons';\r\nimport {reqCategoryList, reqAddCategory, reqUpdateCategory} from '../../api/index.js';\r\nimport {colorType, colorCount, adjective, adjectiveCount} from '../../config/color.js';\r\nimport {PAGE_SIZE} from '../../config/index.js';\r\n\r\n\r\nexport default class Category extends Component{\r\n    state = { \r\n        visible: false, // 模态框显示\r\n        type: '', // add updata\r\n        category: [], // 数据\r\n        isLoading: true, // 数据还未接收 加载状态\r\n        modalId: '', // 修改时模态框的id\r\n        modalName: ''\r\n    };\r\n\r\n    componentDidMount(){\r\n      this.getCategoryList();\r\n    }\r\n    // 数据回显 必须使用该钩子 当状态改变的时候自动调用该方法 this.formRef在showUpdate中无法取到setFieldsvalue方法\r\n    componentDidUpdate() {\r\n      \r\n      if (this.formRef) {\r\n        this.formRef.setFieldsValue({\r\n          categoryname: this.state.modalName\r\n        })\r\n      }\r\n    }\r\n\r\n    // 获取分类列表\r\n    getCategoryList = async () => {\r\n      let result = await reqCategoryList();\r\n      if(result.status !== 0){\r\n        this.setState({isLoading: false});\r\n        message.error(result.msg, 1);\r\n        return;\r\n      }\r\n      let category = result.data.map((item) => {\r\n        this.showTag(item);\r\n        return item;\r\n      })\r\n      this.setState({category:category.reverse(),isLoading: false});\r\n    }\r\n    // 展示标签\r\n    showTag = (obj) => {\r\n      if(Math.floor(Math.random() * 2) % 2 === 1){\r\n        obj.tags = [adjective[Math.floor(Math.random() * adjectiveCount)]]\r\n      }else{\r\n        let adjective1 = 1, adjective2 = 1;\r\n        while(adjective1 === adjective2){\r\n          adjective1 = Math.floor(Math.random() * adjectiveCount);\r\n          adjective2 = Math.floor(Math.random() * adjectiveCount);\r\n        }\r\n        obj.tags = [adjective[adjective1], adjective[adjective2]]\r\n      }\r\n    }\r\n    // 添加分类\r\n    showAdd = () => {\r\n      this.setState({\r\n        visible: true,\r\n        type: 'add'\r\n      });\r\n    };\r\n    // 修改分类 修改状态以便update钩子调用数据回显\r\n    showUpdate = (item) => {\r\n      this.setState({\r\n        visible: true,\r\n        type: 'update',\r\n        modalName: item.name,\r\n        modalId: item._id\r\n      });\r\n    };\r\n    // 添加分类 ajax\r\n    addCategory = async (value) => {\r\n      let result = await reqAddCategory(value);\r\n      if(result.status !== 0){\r\n        message.error(result.msg + '!', 1);\r\n        return;\r\n      }\r\n      let {data} = result;\r\n      this.showTag(data);\r\n      let newcategory = [...this.state.category];\r\n      newcategory.unshift(data);\r\n      this.setState({\r\n        visible: false,\r\n        category: newcategory\r\n      });\r\n      this.formRef.resetFields();//重置表单\r\n    }\r\n    // 修改分类\r\n    updataCategory = async (value) => {\r\n      let resultIsExist = this.state.category.find((item) => {\r\n        return item.name === value.categoryname;\r\n      })\r\n\r\n      if(resultIsExist){\r\n        message.warning('此分类以存在');\r\n      }else{\r\n        let result = await reqUpdateCategory(this.state.modalId, value.categoryname);\r\n        if(result.status === 0){\r\n          this.setState({\r\n            visible: false\r\n          });\r\n          this.formRef.resetFields();//重置表单\r\n          this.getCategoryList();// 重新获取列表\r\n        }else{\r\n          message.error('修改失败，请重试!', 1);\r\n        }\r\n      }\r\n    }\r\n    // 点击确定\r\n    handleOk = () => {\r\n        // 表单验证\r\n        this.formRef.validateFields()\r\n        .then(value => {\r\n          // 判断类型\r\n          if(this.state.type === 'add') this.addCategory(value.categoryname);\r\n          if(this.state.type === 'update') this.updataCategory(value);\r\n        })\r\n        .catch(error => message.error(error.message, 1))\r\n    };\r\n    // 点击取消\r\n    handleCancel = () => {\r\n      this.formRef.resetFields();//重置表单\r\n        this.setState({\r\n          visible: false,\r\n          modalName: ''\r\n        });\r\n    };\r\n\r\n   \r\n    render(){\r\n        // 列\r\n        const columns = [\r\n            {\r\n              title: '分类名称',\r\n              align: 'center',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n            },\r\n            {\r\n              title: '标签',\r\n              align: 'center',\r\n              key: 'tags',\r\n              width: '25%',\r\n              dataIndex: 'tags',\r\n              render: tags => (\r\n                <>\r\n                  {tags.map(tag => {\r\n                    let color = colorType[Math.floor(Math.random() * colorCount)];\r\n                    return (\r\n                      <Tag color={color} key={tag}>\r\n                        {tag.toUpperCase()}\r\n                      </Tag>\r\n                    );\r\n                  })}\r\n                </>\r\n              )\r\n\r\n            },\r\n            {\r\n              title: '操作',\r\n              align: 'center',\r\n              width: '25%',\r\n              key: 'action',\r\n              // 默认将该行所有数据作为参数注入\r\n              render: (item) => (<Button onClick={() => {this.showUpdate(item)}} ghost type=\"dashed\" style={{color: '#4077B0'}}>修改分类</Button>)\r\n            },\r\n        ];\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    title={this.state.type === 'update' ? '修改分类' : '添加分类'}\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                >\r\n                    <Form \r\n                            name=\"normal_login\" \r\n                            className=\"login-form\" \r\n                            ref={(form) => {this.formRef = form}}\r\n                        >\r\n                        <Form.Item\r\n                            name=\"categoryname\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '分类名不能为空!'\r\n                                }\r\n                            ]}\r\n                            initialValue={this.state.modalName}\r\n                        >\r\n                            <Input\r\n                                placeholder=\"请输入分类名\"\r\n                            />\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n                <Card  extra={<Button onClick={this.showAdd} type=\"primary\"><PlusCircleOutlined />添加分类</Button>}>\r\n                    <Table \r\n                    columns={columns} \r\n                    dataSource={this.state.category} \r\n                    bordered={true}\r\n                    loading={this.state.isLoading}\r\n                    rowKey=\"_id\"\r\n                    pagination={{pageSize: PAGE_SIZE, showQuickJumper: true}}\r\n                />\r\n                </Card>\r\n            </div> \r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Card, Button, Table, Select, Input, message} from 'antd';\r\nimport {PlusOutlined, SearchOutlined} from '@ant-design/icons';\r\nimport {connect} from 'react-redux';\r\nimport {reqProductList, reqUpdateProductState, reqSearchProductList} from '../../api/index.js';\r\nimport {PRODUCT_SIZE} from '../../config/index.js';\r\nimport {createSaveProductListAction} from '../../redux/actions/create_save_product_list_action'\r\n\r\nconst {Option} = Select;\r\n\r\n@connect(\r\n    state => ({}),\r\n    {\r\n        saveProductList: createSaveProductListAction\r\n    }\r\n)\r\nclass Product extends Component{\r\n    \r\n    state = {\r\n        productList: [], // 商品列表\r\n        total: 0, // 商品总数\r\n        current: 1, // 当前页数\r\n        isLoading: true, // 是否正在加载\r\n        searchType: 'productName',// 搜索方式\r\n        keyWord: '', // 关键字\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getProductList();\r\n    }\r\n\r\n    // 商品状态管理\r\n    updateProductState = async (item) => {\r\n        const {_id, status} = item;\r\n        let state = (status === 1 ? 2 : 1);\r\n        let result = await reqUpdateProductState(_id, state);\r\n        if(result.status === 0){\r\n            let productList = [...this.state.productList];\r\n            productList.map((item) => {\r\n                if(item._id === _id){\r\n                    item.status = state;\r\n                }\r\n                return item\r\n            });\r\n            this.setState({\r\n                productList\r\n            })\r\n            if(state === 2){\r\n                message.success('下架成功!', 1);\r\n            }else{\r\n                message.success('上架成功!', 1);\r\n            }\r\n        }else{\r\n            if(state === 2){\r\n                message.success('下架失败,请刷新后重试!', 1);\r\n            }else{\r\n                message.success('上架失败,请刷新后重试!', 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 获取商品列表 并保存到redux\r\n    getProductList = async (page=1) => {\r\n        let result;\r\n        if(this.isSearch){\r\n            const {searchType, keyWord} = this.state;\r\n            result = await reqSearchProductList(page, PRODUCT_SIZE, searchType, keyWord)\r\n        }else{\r\n            result = await reqProductList(page, PRODUCT_SIZE);\r\n        }\r\n        if(result.status === 0){\r\n            let {list, total} = result.data;\r\n            this.setState({\r\n                productList: list,\r\n                total,\r\n                isLoading: false,\r\n                current: page\r\n            });\r\n            // 存入store\r\n            this.props.saveProductList(list)\r\n        }else{\r\n            this.setState({isLoading: false})\r\n            message.error('获取商品列表失败!', 1);\r\n        }\r\n    }\r\n    // 获取到选择框的值 维护到状态\r\n    handleChange = (value) => {\r\n        this.setState({\r\n            searchType: value\r\n        })\r\n    }\r\n    // 获取关键字 并维护到状态\r\n    getKeyWord = (event) => {\r\n        this.setState({\r\n            keyWord: event.target.value\r\n        })\r\n    }\r\n    // 搜索关键字发送请求\r\n    searchKeyWord = () => {\r\n        this.state.keyWord === '' ? this.isSearch = false : this.isSearch = true;\r\n        this.getProductList();\r\n    }\r\n\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '商品名称',\r\n                dataIndex: 'name',\r\n                align: 'center',\r\n                width: '20%',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '商品描述',\r\n                dataIndex: 'desc',\r\n                align: 'center',\r\n                key: 'desc',\r\n            },\r\n            {\r\n                title: '价格',\r\n                dataIndex: 'price',\r\n                align: 'center',\r\n                width: '10%',\r\n                key: 'price',\r\n                render: (price) => {\r\n                    return <span>{'￥' + price}</span>\r\n                }\r\n            },\r\n            {\r\n                title: '状态',\r\n                align: 'center',\r\n                width: '10%',\r\n                key: 'status',\r\n                render: (item) => {\r\n                    if(item.status === 1){\r\n                        return (\r\n                            <div>\r\n                                <Button danger type=\"primary\" onClick={() => {this.updateProductState(item)}}>下架</Button><br />\r\n                                <span>在售</span>\r\n                            </div>\r\n                        )\r\n                    }else{\r\n                        return (\r\n                            <div>\r\n                                <Button type=\"primary\" onClick={() => {this.updateProductState(item)}}>上架</Button><br />\r\n                                <span>已停售</span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                align: 'center',\r\n                width: '10%',\r\n                key: 'operation',\r\n                render: (item) => {\r\n                    return (\r\n                        <div>\r\n                            <Button type=\"link\" onClick={() => {this.props.history.push(`/admin/production/product/detail/${item._id}`)}}>详细</Button><br />\r\n                            <Button type=\"link\" onClick={() => {this.props.history.push(`/admin/production/product/add_update/${item._id}`)}}>修改</Button>\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n        ];\r\n        return (\r\n            <Card \r\n                title={\r\n                    <div>\r\n                        <Select defaultValue=\"productName\" style={{width: '8%'}} onChange={this.handleChange}>\r\n                            <Option value=\"productName\">按名称搜索</Option>\r\n                            <Option value=\"productDesc\">按描述搜索</Option>\r\n                        </Select>\r\n                        <Input placeholder=\"关键字\" style={{width: '15%', marginLeft: '1%'}} allowClear onChange={this.getKeyWord}/>\r\n                        <Button type=\"primary\" style={{marginLeft: '1%'}} onClick={this.searchKeyWord}><SearchOutlined />搜索</Button>\r\n                    </div>\r\n              } \r\n                extra={<Button type=\"primary\" onClick={() => {this.props.history.push('/admin/production/product/add_update')}}><PlusOutlined />添加商品</Button>}\r\n            >\r\n                <Table \r\n                    dataSource={this.state.productList} \r\n                    columns={columns}\r\n                    bordered\r\n                    pagination={{pageSize: 5, showQuickJumper: true, total: this.state.total, current: this.state.current, onChange:this.getProductList}}\r\n                    rowKey=\"_id\"\r\n                    loading={this.state.isLoading}\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Product;","import {SAVE_PRODUCT_LIST} from '../action_types.js';\r\n\r\nexport const createSaveProductListAction = value => {\r\n    return {type: SAVE_PRODUCT_LIST, data: value};\r\n};","import React, {Component} from 'react';\r\nimport {Card, Button, Table, Modal, Form, Input, Select, message} from 'antd';\r\nimport {UserAddOutlined, ExclamationCircleOutlined} from '@ant-design/icons';\r\nimport dayjs from 'dayjs';\r\nimport {reqUserList, reqAddUser, reqDeleteUser, reqUpdateUser} from '../../api/index.js';\r\nconst {Option} = Select;\r\n\r\n\r\nexport default class User extends Component{\r\n    state = {\r\n        isLoading: true, // 加载\r\n        addVisible: false, // 添加用户模态框\r\n        roles: [], // 所有角色名\r\n        users: [], // 所有用户信息\r\n        user: [], // 数据回显指定用户\r\n        type: 'add', // 判断是修改还是更新\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getUserList()\r\n    }\r\n\r\n\r\n    componentDidUpdate(){\r\n        if(this.state.user.length !== 0){\r\n            if(this.state.type !== 'add'){\r\n                if (this.formRef) {\r\n                    const {username, role_id, phone, email} = this.state.user;\r\n                    this.formRef.setFieldsValue({\r\n                        username,\r\n                        email,\r\n                        role_id,\r\n                        phone\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 获取所有用户列表\r\n    getUserList = async () => {\r\n        let result = await reqUserList();\r\n        if(result.status === 0){\r\n            let {users, roles} = result.data;\r\n            this.setState({roles, users: users.reverse()})\r\n        }else{\r\n            message.error('获取列表失败,请刷新!', 1);\r\n        }\r\n        this.setState({isLoading: false});\r\n    }\r\n    // \r\n    showAddModal = (item) => {\r\n        const {_id, username, role_id, phone, email} = item;\r\n        if(_id){\r\n            this.setState({user: {_id ,username, role_id, phone, email}, type: 'update'})\r\n        }else{\r\n            if(this.formRef){\r\n                this.formRef.resetFields();//重置表单\r\n            }\r\n            this.setState({type: 'add'});\r\n        }\r\n        this.setState({addVisible: true});\r\n    };\r\n\r\n    handleAddOk = () => {\r\n        // 表单验证\r\n        this.formRef.validateFields()\r\n            .then(value => {\r\n                if(this.state.type === 'add'){\r\n                    reqAddUser(value).then(result => {\r\n                        if(result.status === 0){\r\n                            message.success('添加成功!', 1);\r\n                            this.getUserList();\r\n                            if(this.formRef){\r\n                                this.formRef.resetFields();//重置表单\r\n                            }\r\n                            this.setState({addVisible: false});\r\n                        }else{\r\n                            message.warning(result.msg + '!', 1);\r\n                        }\r\n                    })\r\n                }else{\r\n                    const {_id} = this.state.user;\r\n                    const {username, email, phone, role_id, password} = value;\r\n                    this.flag = true;\r\n                    reqUpdateUser({_id, username, phone, password, email, role_id}).then(value => {\r\n                        if(value.status === 0){\r\n                            message.success('修改成功!', 1);\r\n                            this.getUserList();\r\n                            if(this.formRef){\r\n                                this.formRef.resetFields();//重置表单\r\n                            }\r\n                            this.setState({addVisible: false});\r\n                        }else{\r\n                            message.error('修改失败,请稍后重试!', 1);\r\n                            this.setState({addVisible: false});\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => message.error('请检查输入项!', 1))\r\n    };\r\n\r\n    handleAddCancel = () => {\r\n        this.formRef.resetFields();//重置表单\r\n        this.setState({addVisible: false});\r\n    };\r\n\r\n\r\n    confirm = (item) => {\r\n        Modal.confirm({\r\n          title: '用户删除',\r\n          icon: <ExclamationCircleOutlined />,\r\n          content: '此操作不可逆!',\r\n          okText: '确认',\r\n          cancelText: '取消',\r\n          onOk: () => {\r\n            this.deleteUserInfo(item._id);\r\n          },\r\n          onCancel() {\r\n            message.loading('取消', 0.5);\r\n          },\r\n        });\r\n    }\r\n\r\n    deleteUserInfo = async (id) => {\r\n        let result = await reqDeleteUser(id);\r\n        if(result.status === 0){\r\n            message.success('删除成功!', 1);\r\n            this.getUserList();\r\n        }else{\r\n            message.error('删除失败!', 1);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {isLoading, addVisible, roles, users, type} = this.state;\r\n        const columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username',\r\n                align: 'center',\r\n                key: 'username',\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n                align: 'center',\r\n                key: 'email',\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'phone',\r\n                align: 'center',\r\n                key: 'phone',\r\n            },\r\n            {\r\n                title: '注册时间',\r\n                dataIndex: 'create_time',\r\n                align: 'center',\r\n                key: 'create_time',\r\n                render: time => dayjs(time).format('YYYY-MM-DD HH:mm:ss')\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role_id',\r\n                align: 'center',\r\n                key: 'roleName',\r\n                render: id => roles.find((item => item._id === id)).name\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                align: 'center',\r\n                render: (item) => {\r\n                    return (\r\n                        <div>\r\n                            <Button type=\"link\" onClick={() => {this.showAddModal(item)}}>修改</Button>\r\n                            <Button type=\"link\" onClick={() => {this.confirm(item)}}>删除</Button>\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n        ];\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    title={type === 'add' ? '用户添加' : '用户修改'}\r\n                    visible={addVisible}\r\n                    onOk={this.handleAddOk}\r\n                    onCancel={this.handleAddCancel}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                >\r\n                    <Form \r\n                            name=\"normal_login\" \r\n                            className=\"login-form\" \r\n                            labelCol={{xs: 8, md: 6, lg: 4}}\r\n                            ref={(form) => {this.formRef = form}}\r\n                        >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            label=\"用户名\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '用户名不能为空!'\r\n                                },\r\n                                {\r\n                                    min: 4,\r\n                                    message: '用户名必须大于等于4位!'\r\n                                },\r\n                                {\r\n                                    max: 12,\r\n                                    message: '用户名必须小于等于12位!'\r\n                                },\r\n                                {\r\n                                    pattern: /^\\w+$/,\r\n                                    message: '用户名必须由字母数字下划线组成!'\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                placeholder=\"请输入用户名\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            label=\"密码\"\r\n                            rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: '密码不能为空!'\r\n                                    },\r\n                                    {\r\n                                        min: 5,\r\n                                        message: '密码必须大于等于5位!'\r\n                                    },\r\n                                    {\r\n                                        max: 18,\r\n                                        message: '密码必须小于等于18位!'\r\n                                    },\r\n                                    {\r\n                                        pattern: /^\\w+$/,\r\n                                        message: '密码必须由字母数字下划线组成!'\r\n                                    }\r\n                                ]\r\n                            }\r\n                        >\r\n                            <Input\r\n                                placeholder=\"请输入密码\"\r\n                                type=\"password\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"phone\"\r\n                            label=\"电话号码\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '电话号码不能为空!'\r\n                                },\r\n                                {\r\n                                    pattern: /^(0|86|17951)?(13[0-9]|15[012356789]|166|17[3678]|18[0-9]|14[57])[0-9]{8}$/,\r\n                                    message: '请输入正确格式的电话号码!',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                placeholder=\"请输入电话号码\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            label=\"邮箱\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '邮箱不能为空!'\r\n                                },\r\n                                {\r\n                                    type: 'email',\r\n                                    message: '请输入正确格式的邮箱!'\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                type=\"email\"\r\n                                placeholder=\"请输入邮箱\"\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"role_id\"\r\n                            label=\"角色\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请选择一个角色!'\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Select placeholder=\"请选择一个角色\">\r\n                                {\r\n                                    roles.map((item) => (<Option value={item._id} key={item._id}>{item.name}</Option>))\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n                <Card title={<Button type=\"primary\" onClick={this.showAddModal}><UserAddOutlined />创建用户</Button>}>\r\n                    <Table dataSource={users} columns={columns} bordered rowKey=\"_id\" loading={isLoading}/>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Card, Button, Table, Modal, Form, Input, message, Tree} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {PlusSquareOutlined} from '@ant-design/icons';\r\nimport dayjs from 'dayjs';\r\nimport {reqAddRole, reqRoleList, reqAuthRole} from '../../api/index.js';\r\nimport menuList from '../../config/menu-config.js';\r\nimport {PAGE_SIZE} from '../../config/index.js';\r\n\r\n@connect(\r\n    state => ({username: state.userInfo.user.username}),\r\n    {}\r\n)\r\nclass Role extends Component{\r\n\r\n    state = {\r\n        addVisible: false, // 添加用户可见\r\n        roleVisible: false, // 权限可见\r\n        roleList: [], // 角色列表\r\n        authList: [], // 生成权限的数据\r\n        checkedKeys: [], // 默认选中的节点\r\n        _id: '', // 要授权的角色的id\r\n        menus: [], // 权限key的数组\r\n        isLoading: true\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.getRoleList();\r\n        // menuList外面套一层\r\n        let newMenuList = [{title: '平台功能', key: '0', children: menuList}]\r\n        this.setState({authList: newMenuList})\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.formRef){\r\n            this.formRef.resetFields();//重置表单\r\n        }\r\n    }\r\n    // 请求角色列表\r\n    getRoleList = async () => {\r\n        let result = await reqRoleList();\r\n        if(result.status === 0){\r\n            this.setState({roleList: result.data.reverse(), isLoading: false});\r\n        }else{\r\n            message.error('获取角色列表失败,请刷新后重试!', 1);\r\n        }\r\n    }\r\n    // 展示新增角色模态框\r\n    showAddRole = () => {\r\n        this.setState({addVisible: true});\r\n    }\r\n    // 展示设置权限模态框\r\n    showAuth = (item) => {\r\n        const id = item._id;\r\n        const {auth_time} = item;\r\n        // 如果有授权时间\r\n        if(auth_time){\r\n            // 数据回显\r\n            const {roleList, checkedKeys} = this.state;\r\n            let result = roleList.find((item) => item._id === id);\r\n            if(result){\r\n                let newCheckedKeys = [...checkedKeys, ...result.menus];\r\n                this.checkedKeys = newCheckedKeys\r\n                this.setState({checkedKeys: newCheckedKeys});\r\n            }\r\n            // 如果没有授权时间 默认选中首页\r\n        }else{\r\n            this.setState({checkedKeys: ['home']});\r\n        }\r\n        this.setState({roleVisible: true, _id: id});\r\n    }\r\n    // 点击新增角色确定回调\r\n    handleAddOk = () => {\r\n        // 表单验证\r\n        this.formRef.validateFields()\r\n            .then(value => {\r\n                let result = this.state.roleList.find((item) => item.name === value.roleName)\r\n                if(result) message.warning('角色名重复!', 1);\r\n                else this.addRole(value.roleName);\r\n            })\r\n            .catch(error => message.error(error.message, 1))\r\n    };\r\n    // 请求添加角色\r\n    addRole = async roleName => {\r\n        let result = await reqAddRole(roleName);\r\n        if(result.status === 0){\r\n            let newRoleList = [...this.state.roleList];\r\n            newRoleList.unshift(result.data)\r\n            message.success('添加成功!', 1);\r\n            this.setState({addVisible: false, roleList: newRoleList});\r\n        }else{\r\n            message.error('添加失败,请刷新后重试!', 1);\r\n        }\r\n    }\r\n    // 点击新增角色取消回调\r\n    handleAddCancel = () => {\r\n        this.formRef.resetFields();//重置表单\r\n        this.setState({addVisible: false});\r\n    };\r\n    // 点击确认的回调\r\n    handleRoleOk = async () => {\r\n        const {menus, _id} = this.state;\r\n        if(menus.length !== 0){\r\n            const auth_name = this.props.username;\r\n            let result = await reqAuthRole({menus, _id, auth_name})\r\n            if(result.status === 0){\r\n                message.success('授权成功!', 1);\r\n                this.getRoleList();\r\n                this.setState({roleVisible: false});\r\n            }else{\r\n                message.error('授权失败,请重试!', 1);\r\n            }\r\n        }else{\r\n            message.warning('请至少选择一个权限!', 1);\r\n        }\r\n        \r\n    }\r\n    // 点击取消的回调\r\n    handleRoleCancel = () => {\r\n        this.setState({roleVisible: false, checkedKeys: []});\r\n    }\r\n    // 选择的回调\r\n    onCheck = (menus) => {\r\n        // 选中的节点也要维护到状态 以便于显示\r\n        this.setState({menus, checkedKeys: menus})\r\n    }\r\n\r\n    render(){\r\n        const columns = [\r\n            {\r\n                title: '角色名称',\r\n                align: 'center',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                align: 'center',\r\n                dataIndex: 'create_time',\r\n                render: time => (dayjs(time).format('YYYY-MM-DD HH:mm:ss'))\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                align: 'center',\r\n                dataIndex: 'auth_time',\r\n                key: 'auth_time',\r\n                render: (time) => time ? dayjs(time).format('YYYY-MM-DD HH:mm:ss') : ''\r\n            },\r\n            {\r\n                title: '授权人',\r\n                align: 'center',\r\n                dataIndex: 'auth_name',\r\n                key: 'auth_name',\r\n            },\r\n            {\r\n                title: '操作',\r\n                align: 'center',\r\n                key: 'operation',\r\n                render: (item) => (<Button type=\"link\" onClick={() => {this.showAuth(item)}}>设置权限</Button>)\r\n            },\r\n        ];\r\n\r\n        const {roleList, addVisible, authList, isLoading, checkedKeys} = this.state;\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    title=\"新增角色\"\r\n                    visible={addVisible}\r\n                    onOk={this.handleAddOk}\r\n                    onCancel={this.handleAddCancel}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                >\r\n                    <Form \r\n                            name=\"normal_login\" \r\n                            className=\"login-form\" \r\n                            ref={(form) => {this.formRef = form}}\r\n                        >\r\n                        <Form.Item\r\n                            name=\"roleName\"\r\n                            label=\"角色名称\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '分类名不能为空!'\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                placeholder=\"请输入角色名\"\r\n                            />\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n                <Card title={<Button onClick={this.showAddRole} type=\"primary\"><PlusSquareOutlined />新增角色</Button>}>\r\n                    <Table dataSource={roleList} columns={columns} bordered rowKey=\"_id\" loading={isLoading} pagination={{pageSize: PAGE_SIZE, showQuickJumper: true}}/>\r\n                </Card>\r\n                <Modal\r\n                    title=\"权限设置\"\r\n                    visible={this.state.roleVisible}\r\n                    onOk={this.handleRoleOk}\r\n                    onCancel={this.handleRoleCancel}\r\n                    okText=\"确认\"\r\n                    cancelText=\"取消\"\r\n                >\r\n                    <Tree\r\n                        checkable // 节点前添加 Checkbox 复选框\r\n                        onCheck={this.onCheck} // 选中的回调\r\n                        defaultExpandAll // 展开所有节点\r\n                        treeData={authList} // 数据\r\n                        checkedKeys={checkedKeys}\r\n                    />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Role;","import React, {Component} from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n\r\nexport default class Line extends Component{\r\n    getOption = () => {\r\n        return {\r\n            xAxis: {\r\n                type: 'category',\r\n                data: ['商务服饰', '洗护用品', '汽车用品', '宠物用品', '奢华箱包', '女士护肤', '智能手机', '智能手表', '笔记本电脑', '台式电脑', '耳机音响']\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [{\r\n                data: [335, 310, 124, 100, 50, 95, 300, 251, 147, 102, 748],\r\n                type: 'line',\r\n                smooth: true\r\n            }]\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <ReactEcharts option={this.getOption()} style={{width: '100%', height: '100%'}}/>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\n\r\nexport default class Pie extends Component{\r\n\r\n    getOption = () => {\r\n        return {\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 10,\r\n                data: ['商务服饰', '洗护用品', '汽车用品', '宠物用品', '奢华箱包', '女士护肤', '智能手机', '智能手表', '笔记本电脑', '台式电脑', '耳机音响']\r\n            },\r\n            series: [\r\n                {\r\n                    name: '销量',\r\n                    type: 'pie',\r\n                    selectedMode: 'single',\r\n                    radius: [0, '30%'],\r\n        \r\n                    label: {\r\n                        position: 'inner'\r\n                    },\r\n                    labelLine: {\r\n                        show: false\r\n                    },\r\n                    data: [\r\n                        {value: 335, name: '办公用品', selected: true},\r\n                        {value: 679, name: '生活用品'},\r\n                        {value: 1548, name: '电子设备'}\r\n                    ]\r\n                },\r\n                {\r\n                    name: '销量',\r\n                    type: 'pie',\r\n                    radius: ['40%', '55%'],\r\n                    label: {\r\n                        formatter: '{a|{a}}{abg|}\\n{hr|}\\n  {b|{b}：}{c}  {per|{d}%}  ',\r\n                        backgroundColor: '#eee',\r\n                        borderColor: '#aaa',\r\n                        borderWidth: 1,\r\n                        borderRadius: 4,\r\n                        // shadowBlur:3,\r\n                        // shadowOffsetX: 2,\r\n                        // shadowOffsetY: 2,\r\n                        // shadowColor: '#999',\r\n                        // padding: [0, 7],\r\n                        rich: {\r\n                            a: {\r\n                                color: '#999',\r\n                                lineHeight: 22,\r\n                                align: 'center'\r\n                            },\r\n                            // abg: {\r\n                            //     backgroundColor: '#333',\r\n                            //     width: '100%',\r\n                            //     align: 'right',\r\n                            //     height: 22,\r\n                            //     borderRadius: [4, 4, 0, 0]\r\n                            // },\r\n                            hr: {\r\n                                borderColor: '#aaa',\r\n                                width: '100%',\r\n                                borderWidth: 0.5,\r\n                                height: 0\r\n                            },\r\n                            b: {\r\n                                fontSize: 16,\r\n                                lineHeight: 33\r\n                            },\r\n                            per: {\r\n                                color: '#eee',\r\n                                backgroundColor: '#334455',\r\n                                padding: [2, 4],\r\n                                borderRadius: 2\r\n                            }\r\n                        }\r\n                    },\r\n                    data: [\r\n                        {value: 335, name: '商务服饰'},\r\n                        {value: 310, name: '洗护用品'},\r\n                        {value: 124, name: '汽车用品'},\r\n                        {value: 100, name: '宠物用品'},\r\n                        {value: 50, name: '奢华箱包'},\r\n                        {value: 95, name: '女士护肤'},\r\n                        {value: 300, name: '智能手机'},\r\n                        {value: 251, name: '智能手表'},\r\n                        {value: 147, name: '笔记本电脑'},\r\n                        {value: 102, name: '台式电脑'},\r\n                        {value: 748, name: '耳机音响'}\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <ReactEcharts option={this.getOption()} style={{width: '100%', height: '100%'}}/>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Menu} from 'antd';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport menuList from '../../../config/menu-config.js';\r\nimport {createSaveTitleAction} from '../../../redux/actions/create_save_title_action';\r\nimport logo from '../../../static/imgs/logo.png';\r\nimport './css/left_nav.less';\r\nconst { SubMenu } = Menu;\r\n\r\n@connect(\r\n    state => ({\r\n        title: state,\r\n        username: state.userInfo.user.username,\r\n        roleList: state.userInfo.user.role.menus\r\n    }),\r\n    {\r\n        saveTitle: createSaveTitleAction\r\n    }\r\n)\r\n@withRouter\r\nclass LeftNav extends Component {\r\n    createMenuList = (list) => {\r\n        return list.map((item) => {\r\n            if(this.hasAuth(item)){\r\n                if(!item.children){\r\n                    return (\r\n                        <Menu.Item onClick={() => {this.props.saveTitle(item.title)}} key={item.key} icon={<item.icon/>}>\r\n                            <Link to={item.path}>\r\n                                {item.title}\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    )\r\n                }else{\r\n                    return (\r\n                        <SubMenu key={item.key} icon={<item.icon />} title={item.title}>\r\n                            {this.createMenuList(item.children)}\r\n                        </SubMenu>\r\n                    )\r\n                }\r\n            }else{\r\n                return <span key={item.key}></span>\r\n            }\r\n        })\r\n    }\r\n\r\n    hasAuth = (item) => {\r\n        const {username, roleList} = this.props;\r\n        if(username === 'admin'){\r\n            return true;\r\n        }else if(!item.children){\r\n            return roleList.indexOf(item.key) !== -1;\r\n        }else if(item.children){\r\n            return item.children.some((item2) => roleList.indexOf(item2.key) !== -1);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <img src={logo} alt=\"logo\"/>\r\n                    <span>商品管理系统</span>\r\n                </header>\r\n                <Menu\r\n                    selectedKeys={this.props.location.pathname.split('/').slice(2)} // 默认选中 根据key 可传数组 或单个key\r\n                    // defaultOpenKeys={} // 初始展开的 SubMenu 菜单项 key或者数组\r\n                    mode=\"inline\" //菜单类型\r\n                    theme=\"dark\" // 主题颜色有亮和暗两种\r\n                    defaultOpenKeys={this.props.location.pathname.split('/').slice(2)}// 默认打开的导航 根据key 传数组\r\n                >\r\n\r\n                {\r\n                    this.createMenuList(menuList)\r\n                }\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LeftNav;\r\n","import {SAVE_TITLE} from '../action_types.js';\r\n\r\nexport const createSaveTitleAction = value => {\r\n    return {type: SAVE_TITLE, data: value};\r\n};","import React, { Component } from 'react';\r\nimport {Card, Button, List, message} from 'antd';\r\nimport {LeftSquareOutlined, LoadingOutlined} from '@ant-design/icons';\r\nimport {connect} from 'react-redux';\r\nimport {reqProductDetail, reqProductCategory} from '../../../api/index.js';\r\nimport {BASE_URL} from '../../../config/index.js';\r\nimport './css/product_detail.less';\r\n\r\n@connect(\r\n    state => ({productList: state.productList}),\r\n    {}\r\n)\r\nclass ProductDetail extends Component {\r\n\r\n    state = {\r\n        productDetail: {}\r\n    }\r\n\r\n    componentDidMount(){\r\n        // 参数路由\r\n        const {id} = this.props.match.params;\r\n        const {productList} = this.props;\r\n        // 尝试从redux中读\r\n        if(productList){\r\n            let result = productList.find((item) => {\r\n                return item._id === id;\r\n            });\r\n            if(result){\r\n                this.getProductCategory(result)\r\n            }\r\n        }else{\r\n            this.getProductDetail(id)\r\n        }\r\n    }\r\n    // 获取详情\r\n    getProductDetail = async (id) => {\r\n        let result = await reqProductDetail(id);\r\n        if(result.status === 0){\r\n            this.getProductCategory(result.data)\r\n        }else{\r\n            message.error('数据异常,请刷新后重试!', 1);\r\n        }\r\n    }\r\n    // 获取分类名\r\n    getProductCategory = async (data) => {\r\n        let result = await reqProductCategory(data.categoryId);\r\n        if(result.status === 0){\r\n            data.categoryId = result.data.name;\r\n            this.setState({productDetail: data});\r\n        }else{\r\n            message.error('数据异常,请刷新后重试!', 1);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {categoryId, desc, detail, imgs, name, price} = this.state.productDetail;\r\n        return (\r\n            <Card title={<Button type=\"link\" className=\"go-back\" onClick={() => {this.props.history.goBack()}}><LeftSquareOutlined className=\"back-icon\"/>商品详情</Button>}>\r\n                <List\r\n                    size=\"large\"\r\n                    bordered\r\n                >\r\n                    <List.Item style={{justifyContent: 'flex-start'}}>\r\n                        <span className=\"title\">商品名称:</span>{name ? name : <LoadingOutlined/>}\r\n                    </List.Item>\r\n                    <List.Item style={{justifyContent: 'flex-start'}}>\r\n                        <span className=\"title\">商品描述:</span>{desc ? desc : <LoadingOutlined/>}\r\n                    </List.Item>\r\n                    <List.Item style={{justifyContent: 'flex-start'}}>\r\n                        <span className=\"title\">商品价格:</span>{price ? '￥' + price : <LoadingOutlined/>}\r\n                    </List.Item>\r\n                    <List.Item style={{justifyContent: 'flex-start'}}>\r\n                        <span className=\"title\">商品分类:</span>{categoryId ? categoryId : <LoadingOutlined/>}\r\n                    </List.Item>\r\n                    <List.Item style={{justifyContent: 'flex-start'}}>\r\n                        <span className=\"title\">商品图片:{\r\n                            imgs ? imgs.map((item, index) => (<img src={BASE_URL + '/upload/' + item} alt=\"商品图片\" key={index} style={{width:'200px'}}></img>)) : <LoadingOutlined/>\r\n                        }</span>\r\n                    </List.Item>\r\n                    <List.Item style={{justifyContent: 'flex-start'}}>\r\n                        <span className=\"title\">商品详细:</span>\r\n                        <span>{detail ? <span dangerouslySetInnerHTML={{__html: detail}}></span> : <LoadingOutlined/>}</span>\r\n                    </List.Item>\r\n                </List>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductDetail;\r\n","import React from 'react';\r\nimport {Upload, Modal, message} from 'antd';\r\nimport {PlusOutlined} from '@ant-design/icons';\r\nimport {BASE_URL} from '../../../../config/index.js';\r\nimport {reqRemovePhoto} from '../../../../api/index.js';\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\nexport default class PicturesWall extends React.Component {\r\n  state = {\r\n    previewVisible: false,// 预览\r\n    previewImage: '',//预览图片的url\r\n    previewTitle: '',// 图片的name\r\n    fileList: []// 图片列表\r\n  };\r\n\r\n  setFileList = (imgs) => {\r\n    let fileList = [];\r\n    imgs.forEach((item, index) => {fileList.push({uid: -index, name: '商品图片', url: BASE_URL + '/upload/' + item})});\r\n    this.setState({fileList});\r\n  }\r\n  // 取消回调\r\n  handleCancel = () => {this.setState({ previewVisible: false })};\r\n  // 预览回调\r\n  handlePreview = async file => {\r\n    if (!file.url && !file.preview) {\r\n      // console.log(file.originFileObj); //转为base64编码\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n    console.log(file.url)\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n  // 上传回调\r\n  handleChange = async ({fileList, file}) => { // 4个状态 uploading / done / error / removed\r\n    if(file.status === 'done'){\r\n      // console.log(file)\r\n      message.success('上传成功!', 1);\r\n      fileList[fileList.length - 1].name = '商品图片';\r\n      fileList[fileList.length - 1].url = BASE_URL + '/upload/' + file.response.data.name;\r\n      fileList[fileList.length - 1].uid = file.response.data.name;\r\n      this.setState({fileList});\r\n    }else if(file.status === 'error'){\r\n      message.error('上传失败,请刷新后重试!', 1);\r\n      this.setState({fileList});\r\n    }\r\n    if(file.status === 'removed'){\r\n      let result = await reqRemovePhoto(file.uid);\r\n      if(result.status === 0){\r\n        message.success('删除成功!', 1);\r\n        this.setState({fileList});\r\n      }else{\r\n        message.error('删除失败,请重试!', 1);\r\n      }\r\n    }\r\n    \r\n  };\r\n  // 得到图片列表\r\n  getPhotoList = () => {\r\n    let photoArr = [];\r\n    let fileList = [...this.state.fileList];\r\n    fileList.forEach((item) => {\r\n      photoArr.push(item.uid);\r\n    })\r\n\r\n    return photoArr;\r\n  }\r\n\r\n  render() {\r\n    const {previewVisible, previewImage, fileList, previewTitle} = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <PlusOutlined />\r\n        <div style={{marginTop: 8}}>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <>\r\n        <Upload\r\n          action={`${BASE_URL}/manage/img/upload`} // 发送请求的url\r\n          method=\"POST\" // 请求方式\r\n          name=\"image\" // 发到后台的文件参数名\r\n          listType=\"picture-card\" // 图片模式\r\n          fileList={fileList} // 从状态中读取列表\r\n          onPreview={this.handlePreview} // 预览的回调\r\n          onChange={this.handleChange} // 上传文件的回调\r\n          // 当长度大于5时，不能再上传\r\n        >\r\n          {fileList.length >= 5 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          title={previewTitle}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img alt=\"example\" style={{width: '100%'}} src={previewImage} />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport {EditorState, convertToRaw, ContentState} from 'draft-js';\r\nimport {Editor} from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\n\r\nexport default class TextEditor extends Component {\r\n  state = {\r\n    editorState: EditorState.createEmpty(), //构建一个初始化状态的编辑器+内容\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    //   维护到状态\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n  // 设置文本\r\n  setText = (html)=>{\r\n    const contentBlock = htmlToDraft(html);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.setState({\r\n        editorState,\r\n      });\r\n    }\r\n  }\r\n\r\n  getText = () => {\r\n    const {editorState} = this.state;\r\n    // 返回文本\r\n    return draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n  }\r\n\r\n  render() {\r\n    const {editorState} = this.state;\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          //wrapperClassName=\"demo-wrapper\" //最外侧容器的样式\r\n          //editorClassName=\"demo-editor\"//编辑区域的样式\r\n          editorStyle={{\r\n            border:' 1px solid black',\r\n            paddingLeft:'10px',\r\n            lineHeight: '20px',\r\n            minHeight: '190px'\r\n          }}\r\n            //   文本框改变回调\r\n          onEditorStateChange={this.onEditorStateChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Form, Input, Button, Card, message, Select} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {LeftSquareOutlined} from '@ant-design/icons';\r\nimport {reqCategoryList, reqAddProduct, reqProductDetail, reqUpdateProduct} from '../../../api/index.js';\r\nimport PicturesWall from './pictures_wall/pictures_wall.jsx';\r\nimport TextEditor from './text_editor/text_editor.jsx';\r\nimport './css/product_add.less';\r\nconst {Option} = Select;\r\n\r\n\r\n@connect(\r\n    state => ({productList: state.productList}),\r\n    {}\r\n)\r\nclass ProductAddUpdate extends Component {\r\n\r\n    state = {\r\n        categoryList: [], // 获取商品列表\r\n        type: 'add', // 判断是否修改或者添加商品\r\n        name: '', // 回显数据的商品名称\r\n        desc: '', //回显数据的描述\r\n        price: '',// 回显数据的价格\r\n        categoryId: '', // 回显商品的分类\r\n        imgs: [],\r\n        detail: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        // 获取id\r\n        const {id} = this.props.match.params;\r\n        if(id){\r\n            this.setState({type: 'update'});\r\n            // 尝试从redux中读取该id应的商品\r\n            const {productList} = this.props;\r\n            if(productList){\r\n                let result = productList.find((item) => (item._id === id));\r\n                this.mapProductInfoToState(result)\r\n            }else{\r\n                this.getProductInfo(id);\r\n            }\r\n        }\r\n        this.getCategoryList();\r\n    }\r\n    componentDidUpdate(){\r\n        const {name, desc, price, categoryId, imgs, detail, type} = this.state;\r\n        if (this.formRef.current) {\r\n            if(type !== 'add'){\r\n                this.formRef.current.setFieldsValue({name, desc, price, categoryId});\r\n                this.photoRef.current.setFileList(imgs);\r\n                this.textRef.setText(detail);\r\n            }\r\n        }\r\n    }\r\n    // 获取分类列表\r\n    getCategoryList = async () => {\r\n        let result = await reqCategoryList();\r\n        if(result.status === 0){\r\n            this.setState({categoryList:result.data});\r\n        }else{\r\n            message.error('获取列表失败,请刷新后重试!', 1);\r\n        }\r\n    }\r\n    // 获取商品信息\r\n    getProductInfo = async id => {\r\n        let result = await reqProductDetail(id);\r\n        if(result.status === 0){\r\n            this.mapProductInfoToState(result.data)\r\n        }else{\r\n            message.error('获取商品信息失败,请刷新后重试!', 1);\r\n        }\r\n    }\r\n    // 将商品信息映射到状态\r\n    mapProductInfoToState = data => {\r\n        const {categoryId, desc, detail, imgs, name, price} = data;\r\n        this.setState({name, desc, price, categoryId, detail, imgs});\r\n    }\r\n\r\n    photoRef = React.createRef();\r\n    formRef = React.createRef();\r\n\r\n    onFinish = async values => {\r\n        const {type} = this.state;\r\n        const _id = this.props.match.params.id;\r\n        let imgs = this.photoRef.current.getPhotoList();\r\n        let detail = this.textRef.getText();\r\n        let result;\r\n        if(type === 'add'){\r\n            result = await reqAddProduct({...values, imgs, detail});\r\n            if(result.status === 0){\r\n                message.success('添加成功!', 1);\r\n                this.props.history.replace('/admin/production/product');\r\n            }else{\r\n                message.error(result.msg + '!', 1);\r\n            }\r\n        }else{\r\n            result = await reqUpdateProduct({...values, imgs, detail, _id});\r\n            if(result.status === 0){\r\n                message.success('修改成功!', 1);\r\n                // 服务器未作去重\r\n                this.props.history.replace('/admin/production/product');\r\n            }else{\r\n                message.warning('修改失败, 请刷新后重试!', 1);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const {categoryList, type} = this.state;\r\n        return (\r\n            <Card title={<Button type=\"link\" className=\"go-back\" onClick={() => {this.props.history.goBack()}}><LeftSquareOutlined className=\"back-icon\"/>{type === 'add' ? '商品添加' : '商品修改'}</Button>}>\r\n                <Form \r\n                    labelCol={{xl: 2, md: 5, sm: 8, xs: 12}}\r\n                    wrapperCol={{xl: 8, md: 12, sm: 16, xs: 20}}\r\n                    name=\"normal_login\" \r\n                    className=\"login-form\" \r\n                    // 表单默认值，只有初始化以及重置时生效 obj\r\n                    initialValues={{remember: true}}\r\n                    // 提交表单成功的回调\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                    ref={this.formRef}\r\n                >\r\n                    <Form.Item\r\n                        label=\"商品名称\"\r\n                        name=\"name\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '商品名称不能为空!',\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input \r\n                            // prefix={}\r\n                            placeholder=\"商品名称\" \r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"商品描述\"\r\n                        name=\"desc\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '商品描述不能为空!',\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            // prefix={}\r\n                            placeholder=\"商品描述\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"商品价格\"\r\n                        name=\"price\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '商品价格不能为空!',\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            prefix=\"￥\"\r\n                            addonAfter=\"元\"\r\n                            type=\"number\"\r\n                            placeholder=\"商品价格\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"商品分类\"\r\n                        name=\"categoryId\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: '请选择一个分类'\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Select placeholder=\"请选择一个分类\">\r\n                            {\r\n                                categoryList.map((item) => (<Option value={item._id} key={item._id}>{item.name}</Option>))\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"商品图片\"\r\n                        name=\"imgs\"\r\n                        wrapperCol={{xl: 16, md: 12, sm: 8, xs: 4}}\r\n                    >\r\n                        <PicturesWall ref={this.photoRef}/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"商品详情\"\r\n                        name=\"detail\"\r\n                        wrapperCol={{xl: 17, md: 12, sm: 8, xs: 4}}\r\n                    >\r\n                        <TextEditor ref={(text) => {this.textRef = text}}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\r\n                        {\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" size=\"large\">提交</Button>\r\n                        } \r\n                        className=\"btn-last\"\r\n                    >\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductAddUpdate;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {Layout} from 'antd';\r\nimport Header from './header/header.jsx';\r\nimport Home from '../../components/home/home.jsx';\r\nimport Category from '../category/category.jsx';\r\nimport Product from '../product/product.jsx';\r\nimport User from '../user/user.jsx';\r\nimport Role from '../role/role.jsx';\r\nimport Bar from '../bar/bar.jsx';\r\nimport Line from '../line/line.jsx';\r\nimport Pie from '../pie/pie.jsx';\r\nimport LeftNav from './left_nav/left_nav.jsx';\r\nimport ProductDetail from '../product/product_detail/product_detail.jsx';\r\nimport ProductAddUpdate from '../product/product_add_update/produc_add_update.jsx';\r\nimport './css/admin.less';\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n@connect(\r\n    state => ({userInfo: state.userInfo}),\r\n    {\r\n        \r\n    }\r\n)\r\nclass Admin extends Component{\r\n    render(){\r\n        const {isLogin} = this.props.userInfo;\r\n        if(isLogin){\r\n            return (\r\n                <Layout className=\"admin\">\r\n                    <Sider className=\"sider\">\r\n                        <LeftNav/>\r\n                    </Sider>\r\n                    <Layout>\r\n                        <Header />\r\n                        <Content className=\"content\">\r\n                            <Switch>\r\n                                <Route path=\"/admin/home\" component={Home}/>\r\n                                <Route path=\"/admin/production/category\" component={Category}/>\r\n                                <Route path=\"/admin/production/product/detail/:id\" component={ProductDetail}/>\r\n                                <Route path=\"/admin/production/product/add_update/:id\" component={ProductAddUpdate}/>\r\n                                <Route path=\"/admin/production/product/add_update\" component={ProductAddUpdate}/>\r\n                                <Route path=\"/admin/production/product\" component={Product}/>\r\n                                <Route path=\"/admin/user\" component={User}/>\r\n                                <Route path=\"/admin/role\" component={Role}/>\r\n                                <Route path=\"/admin/charts/bar\" component={Bar}/>\r\n                                <Route path=\"/admin/charts/line\" component={Line}/>\r\n                                <Route path=\"/admin/charts/pie\" component={Pie}/>\r\n                                <Redirect to=\"/admin/home\"/>\r\n                            </Switch>\r\n                        </Content>\r\n                        <Footer className=\"footer\">请使用谷歌浏览器，以获取更好的用户体验！</Footer>\r\n                    </Layout>\r\n                </Layout>\r\n            )\r\n        }else{\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        \r\n    }\r\n}\r\nexport default Admin;","import React,{Component} from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport Login from './containers/login/login.jsx';\nimport Admin from './containers/admin/admin.jsx';\nimport './App.less';\n\nexport default class App extends Component{\n  render(){\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/admin\" component={Admin}/>\n          <Redirect to=\"/admin\"/>\n        </Switch>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport App from './App.js';\nimport store from './redux/store.js';\n\nReactDOM.render(\n<Provider store={store}>\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n</Provider>\n, document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/logo.0e3f6e38.png\";"],"sourceRoot":""}